//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer BLOOM_CONSTANTS
// {
//
//   float bloom_extraction_threshold;  // Offset:    0 Size:     4
//   float blur_convolution_intensity;  // Offset:    4 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// sampler_states[0]                 sampler      NA          NA             s0      1 
// hdr_color_buffer_texture          texture  float4          2d             t0      1 
// BLOOM_CONSTANTS                   cbuffer      NA          NA            cb6      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB6[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 2
//
// Initial variable locations:
//   v0.x <- position.x; v0.y <- position.y; v0.z <- position.z; v0.w <- position.w; 
//   v1.x <- texcoord.x; v1.y <- texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 8 "C:\Users\2220411\Desktop\課題\自作ライブラリ\描画とゲープロmark2\描画とゲープロ\HLSL\glow_extraction_ps.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0  // r0.x <- sampled_color.x; r0.y <- sampled_color.y; r0.z <- sampled_color.z; r0.w <- sampled_color.w

#line 9
add r1.x, cb6[0].x, l(0.500000)
dp3 r1.y, r0.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
mov r1.z, -cb6[0].x
add r1.x, r1.z, r1.x
add r1.y, r1.z, r1.y
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
mul r1.x, r1.x, r1.y
max r1.x, r1.x, l(0.000000)
min r1.x, r1.x, l(1.000000)
mul r1.y, r1.x, l(-2.000000)
add r1.y, r1.y, l(3.000000)
mul r1.x, r1.x, r1.x
mul r1.x, r1.x, r1.y
mul o0.xyz, r0.xyzx, r1.xxxx
mov o0.w, r0.w
ret 
// Approximately 17 instruction slots used
