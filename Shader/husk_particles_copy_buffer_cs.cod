//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// Resource bind info for husk_particle_buffer
// {
//
//   struct husk_particle
//   {
//       
//       float4 color;                  // Offset:    0
//       float3 position;               // Offset:   16
//       float3 normal;                 // Offset:   28
//
//   } $Element;                        // Offset:    0 Size:    40
//
// }
//
// Resource bind info for particle_buffer
// {
//
//   struct particle
//   {
//       
//       float4 color;                  // Offset:    0
//       float3 position;               // Offset:   16
//       float3 velocity;               // Offset:   28
//       float age;                     // Offset:   40
//       int state;                     // Offset:   44
//
//   } $Element;                        // Offset:    0 Size:    48
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// husk_particle_buffer                  UAV  struct         r/w             u0      1 
// particle_buffer                       UAV  struct         r/w             u1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_uav_structured u0, 40
dcl_uav_structured u1, 48
dcl_input vThreadID.x
dcl_temps 1
dcl_thread_group 256, 1, 1
//
// Initial variable locations:
//   vThreadID.x <- dtid.x; vThreadID.y <- dtid.y; vThreadID.z <- dtid.z
//
#line 11 "C:\Users\2220411\Desktop\課題\自作ライブラリ\描画とゲープロmark2\描画とゲープロ\HLSL\husk_particles_copy_buffer_cs.hlsl"
ld_structured_indexable(structured_buffer, stride=40)(mixed,mixed,mixed,mixed) r0.x, vThreadID.x, l(16), u0.xxxx
ld_structured_indexable(structured_buffer, stride=40)(mixed,mixed,mixed,mixed) r0.y, vThreadID.x, l(20), u0.xxxx
ld_structured_indexable(structured_buffer, stride=40)(mixed,mixed,mixed,mixed) r0.z, vThreadID.x, l(24), u0.xxxx
store_structured u1.x, vThreadID.x, l(16), r0.x
store_structured u1.x, vThreadID.x, l(20), r0.y
store_structured u1.x, vThreadID.x, l(24), r0.z

#line 12
ld_structured_indexable(structured_buffer, stride=40)(mixed,mixed,mixed,mixed) r0.x, vThreadID.x, l(0), u0.xxxx
ld_structured_indexable(structured_buffer, stride=40)(mixed,mixed,mixed,mixed) r0.y, vThreadID.x, l(4), u0.xxxx
ld_structured_indexable(structured_buffer, stride=40)(mixed,mixed,mixed,mixed) r0.z, vThreadID.x, l(8), u0.xxxx
ld_structured_indexable(structured_buffer, stride=40)(mixed,mixed,mixed,mixed) r0.w, vThreadID.x, l(12), u0.xxxx
store_structured u1.x, vThreadID.x, l(0), r0.x
store_structured u1.x, vThreadID.x, l(4), r0.y
store_structured u1.x, vThreadID.x, l(8), r0.z
store_structured u1.x, vThreadID.x, l(12), r0.w

#line 13
itof r0.xyz, l(0, 0, 0, 0)
store_structured u1.x, vThreadID.x, l(28), r0.x
store_structured u1.x, vThreadID.x, l(32), r0.y
store_structured u1.x, vThreadID.x, l(36), r0.z

#line 14
store_structured u1.x, vThreadID.x, l(44), l(0)

#line 15
itof r0.x, l(0)
store_structured u1.x, vThreadID.x, l(40), r0.x

#line 16
ret 
// Approximately 22 instruction slots used
