//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PARTICLE_CONSTANTS
// {
//
//   float4 emitter_location;           // Offset:    0 Size:    16
//   float4 target_location;            // Offset:   16 Size:    16
//   uint particle_count;               // Offset:   32 Size:     4
//   float particle_size;               // Offset:   36 Size:     4 [unused]
//   float streak_factor;               // Offset:   40 Size:     4 [unused]
//   float threshold_level;             // Offset:   44 Size:     4 [unused]
//
// }
//
// cbuffer SCENE_CONSTANTS
// {
//
//   row_major float4x4 view;           // Offset:    0 Size:    64 [unused]
//   row_major float4x4 projection;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 view_projection;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverse_projection;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverse_view_projection;// Offset:  256 Size:    64 [unused]
//   float4 directional_light_direction;// Offset:  320 Size:    16 [unused]
//   float4 directional_light_color;    // Offset:  336 Size:    16 [unused]
//   float4 omni_light_position;        // Offset:  352 Size:    16 [unused]
//   float4 omni_light_color;           // Offset:  368 Size:    16 [unused]
//   float4 rimlight_color;             // Offset:  384 Size:    16 [unused]
//   float4 camera_position;            // Offset:  400 Size:    16 [unused]
//   float4 camera_focus;               // Offset:  416 Size:    16 [unused]
//   float4 avatar_position;            // Offset:  432 Size:    16 [unused]
//   float4 avatar_direction;           // Offset:  448 Size:    16 [unused]
//   float time;                        // Offset:  464 Size:     4 [unused]
//   float delta_time;                  // Offset:  468 Size:     4
//   float wind_frequency;              // Offset:  472 Size:     4 [unused]
//   float wind_strength;               // Offset:  476 Size:     4 [unused]
//   float rimlight_factor;             // Offset:  480 Size:     4 [unused]
//   float snow_factor;                 // Offset:  484 Size:     4 [unused]
//
// }
//
// Resource bind info for husk_particle_buffer
// {
//
//   struct husk_particle
//   {
//       
//       float4 color;                  // Offset:    0
//       float3 position;               // Offset:   16
//       float3 normal;                 // Offset:   28
//
//   } $Element;                        // Offset:    0 Size:    40
//
// }
//
// Resource bind info for updated_particle_buffer
// {
//
//   struct particle
//   {
//       
//       float4 color;                  // Offset:    0
//       float3 position;               // Offset:   16
//       float3 velocity;               // Offset:   28
//       float age;                     // Offset:   40
//       int state;                     // Offset:   44
//
//   } $Element;                        // Offset:    0 Size:    48
//
// }
//
// Resource bind info for completed_particle_buffer
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// husk_particle_buffer                  UAV  struct         r/w             u0      1 
// updated_particle_buffer               UAV  struct         r/w             u1      1 
// completed_particle_buffer             UAV  struct     r/w+cnt             u2      1 
// SCENE_CONSTANTS                   cbuffer      NA          NA            cb3      1 
// PARTICLE_CONSTANTS                cbuffer      NA          NA            cb9      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB9[3], immediateIndexed
dcl_constantbuffer CB3[30], immediateIndexed
dcl_uav_structured u0, 40
dcl_uav_structured u1, 48
dcl_uav_structured_opc u2, 4
dcl_input vThreadID.x
dcl_temps 15
dcl_thread_group 256, 1, 1
//
// Initial variable locations:
//   vThreadID.x <- dtid.x; vThreadID.y <- dtid.y; vThreadID.z <- dtid.z
//
#line 12 "C:\Users\2220411\Desktop\課題\自作ライブラリ\描画とゲープロmark2\描画とゲープロ\HLSL\husk_particles_cs.hlsl"
mov r0.x, vThreadID.x  // r0.x <- id

#line 13
uge r0.y, cb9[2].x, r0.x
if_nz r0.y

#line 15
  ld_structured_indexable(structured_buffer, stride=48)(mixed,mixed,mixed,mixed) r1.x, r0.x, l(0), u1.xxxx  // r1.x <- p.color.x
  ld_structured_indexable(structured_buffer, stride=48)(mixed,mixed,mixed,mixed) r1.y, r0.x, l(4), u1.xxxx  // r1.y <- p.color.y
  ld_structured_indexable(structured_buffer, stride=48)(mixed,mixed,mixed,mixed) r1.z, r0.x, l(8), u1.xxxx  // r1.z <- p.color.z
  ld_structured_indexable(structured_buffer, stride=48)(mixed,mixed,mixed,mixed) r1.w, r0.x, l(12), u1.xxxx  // r1.w <- p.color.w
  ld_structured_indexable(structured_buffer, stride=48)(mixed,mixed,mixed,mixed) r2.x, r0.x, l(16), u1.xxxx
  ld_structured_indexable(structured_buffer, stride=48)(mixed,mixed,mixed,mixed) r2.y, r0.x, l(20), u1.xxxx
  ld_structured_indexable(structured_buffer, stride=48)(mixed,mixed,mixed,mixed) r2.z, r0.x, l(24), u1.xxxx
  ld_structured_indexable(structured_buffer, stride=48)(mixed,mixed,mixed,mixed) r2.w, r0.x, l(28), u1.xxxx
  ld_structured_indexable(structured_buffer, stride=48)(mixed,mixed,mixed,mixed) r3.y, r0.x, l(32), u1.xxxx
  ld_structured_indexable(structured_buffer, stride=48)(mixed,mixed,mixed,mixed) r3.z, r0.x, l(36), u1.xxxx
  ld_structured_indexable(structured_buffer, stride=48)(mixed,mixed,mixed,mixed) r0.y, r0.x, l(40), u1.xxxx  // r0.y <- p.age
  ld_structured_indexable(structured_buffer, stride=48)(mixed,mixed,mixed,mixed) r3.x, r0.x, l(44), u1.xxxx  // r3.x <- p.state
  mov r2.x, r2.x  // r2.x <- p.position.x
  mov r2.y, r2.y  // r2.y <- p.position.y
  mov r2.z, r2.z  // r2.z <- p.position.z
  mov r2.w, r2.w  // r2.w <- p.velocity.x
  mov r3.y, r3.y  // r3.y <- p.velocity.y
  mov r3.z, r3.z  // r3.z <- p.velocity.z

#line 17
  switch r3.x

#line 19
    case l(0)

#line 21
    mov r1.w, l(0.800000)

#line 22
    mov r3.x, l(1)

#line 23
    itof r0.y, l(0)

#line 24
    imm_atomic_alloc r4.x, u2

#line 25
    mov r1.xyzw, r1.xyzw
    mov r3.xyz, r3.xyzx
    break 

#line 26
    case l(1)

#line 27
    ld_structured_indexable(structured_buffer, stride=40)(mixed,mixed,mixed,mixed) r4.x, r0.x, l(28), u0.xxxx
    ld_structured_indexable(structured_buffer, stride=40)(mixed,mixed,mixed,mixed) r4.y, r0.x, l(32), u0.xxxx
    ld_structured_indexable(structured_buffer, stride=40)(mixed,mixed,mixed,mixed) r4.z, r0.x, l(36), u0.xxxx
    mul r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r4.xyz, r4.xyzx, cb3[29].yyyy
    mov r3.w, r2.w
    add r3.yzw, r4.yyzx, r3.yyzw  // r3.w <- p.velocity.x

#line 28
    mul r4.xyz, r3.wyzw, cb3[29].yyyy
    add r2.xyz, r2.xyzx, r4.xyzx

#line 29
    lt r0.z, l(2.000000), r0.y
    if_nz r0.z

#line 31
      mov r3.x, l(2)

#line 32
      imm_atomic_alloc r4.x, u2

#line 33
    endif 

#line 34
    mov r2.w, r3.w
    mov r2.xyzw, r2.xyzw  // r2.w <- p.velocity.x
    break 

#line 35
    case l(2)

#line 36
    mov r4.xyz, -cb9[0].xyzx
    add r4.xyz, r4.xyzx, cb9[1].xyzx
    dp3 r0.z, r4.xyzx, r4.xyzx
    rsq r0.z, r0.z
    mul r4.xyz, r0.zzzz, r4.xyzx  // r4.x <- v.x; r4.y <- v.y; r4.z <- v.z

#line 37
    mov r5.xyz, -r2.xyzx
    add r5.xyz, r5.xyzx, cb9[1].xyzx  // r5.x <- z.x; r5.y <- z.y; r5.z <- z.z

#line 38
    dp3 r0.z, r4.xyzx, r5.xyzx
    mul r6.xyz, r4.xyzx, r0.zzzz
    mov r7.xyz, -r5.xyzx
    add r6.xyz, r6.xyzx, r7.xyzx
    dp3 r0.z, r6.xyzx, r6.xyzx
    rsq r0.z, r0.z
    mul r6.xyz, r0.zzzz, r6.xyzx  // r6.x <- x.x; r6.y <- x.y; r6.z <- x.z

#line 39
    dp3 r0.z, r5.xyzx, r5.xyzx
    rsq r0.z, r0.z
    mul r5.xyz, r0.zzzz, r5.xyzx

#line 40
    mul r7.xyz, r6.zxyz, r5.yzxy
    mul r8.xyz, r6.yzxy, r5.zxyz
    mov r8.xyz, -r8.xyzx
    add r7.xyz, r7.xyzx, r8.xyzx
    dp3 r0.z, r7.xyzx, r7.xyzx
    rsq r0.z, r0.z
    mul r7.xyz, r0.zzzz, r7.xyzx  // r7.x <- y.x; r7.y <- y.y; r7.z <- y.z

#line 41
    mul r8.xyz, r4.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000)
    mul r7.xyz, r7.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
    add r7.xyz, r7.xyzx, r8.xyzx
    mul r6.xyz, r6.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000)
    mov r6.xyz, -r6.xyzx
    add r6.xyz, r6.xyzx, r7.xyzx
    dp3 r0.z, r6.xyzx, r6.xyzx
    rsq r0.z, r0.z
    mul r6.xyz, r0.zzzz, r6.xyzx
    itof r7.xyz, l(20, 20, 20, 0)
    mul r3.yzw, r6.yyzx, r7.yyzx  // r3.w <- p.velocity.x

#line 42
    mul r6.xyz, r3.wyzw, cb3[29].yyyy
    add r2.xyz, r2.xyzx, r6.xyzx

#line 43
    dp3 r0.z, r4.xyzx, r5.xyzx
    lt r0.z, r0.z, l(0.000000)
    if_nz r0.z

#line 45
      ld_structured_indexable(structured_buffer, stride=40)(mixed,mixed,mixed,mixed) r4.x, r0.x, l(0), u0.xxxx
      ld_structured_indexable(structured_buffer, stride=40)(mixed,mixed,mixed,mixed) r4.y, r0.x, l(4), u0.xxxx
      ld_structured_indexable(structured_buffer, stride=40)(mixed,mixed,mixed,mixed) r4.z, r0.x, l(8), u0.xxxx
      itof r5.xyz, l(2, 2, 2, 0)
      mul r1.xyz, r4.xyzx, r5.xyzx

#line 47
      itof r0.y, l(0)

#line 48
      mov r3.x, l(3)

#line 49
      imm_atomic_alloc r4.x, u2

#line 50
    endif 

#line 51
    mov r1.xyzw, r1.xyzw
    mov r2.w, r3.w
    mov r2.xyzw, r2.xyzw  // r2.w <- p.velocity.x
    break 

#line 52
    case l(3)

#line 53
    nop 
    mul r4.xyz, r2.xyzx, l(0.054000, 0.054000, 0.054000, 0.000000)

#line 152 "C:\Users\2220411\Desktop\課題\自作ライブラリ\描画とゲープロmark2\描画とゲープロ\HLSL\noise.hlsli"
    mov r0.zw, l(0,0,0.166667,0.333333)  // r0.z <- C.x; r0.w <- C.y

#line 153
    mov r5.xyzw, l(0,0.500000,1.000000,2.000000)  // r5.x <- D.x; r5.y <- D.y; r5.z <- D.z; r5.w <- D.w

#line 156
    dp3 r4.w, r4.xyzx, r0.wwww
    add r6.xyz, r4.wwww, r4.xyzx
    round_ni r6.xyz, r6.xyzx  // r6.x <- i.x; r6.y <- i.y; r6.z <- i.z

#line 157
    mov r7.xyz, -r6.xyzx
    add r4.xyz, r4.xyzx, r7.xyzx
    dp3 r4.w, r6.xyzx, r0.zzzz
    add r4.xyz, r4.wwww, r4.xyzx  // r4.x <- x0.x; r4.y <- x0.y; r4.z <- x0.z

#line 160
    ge r7.xyz, r4.xyzx, r4.yzxy
    movc r7.xyz, r7.xyzx, l(1.000000,1.000000,1.000000,0), l(0,0,0,0)  // r7.x <- g.x; r7.y <- g.y; r7.z <- g.z

#line 161
    mov r8.xyz, -r7.zxyz
    add r8.xyz, r8.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)  // r8.x <- l.z; r8.y <- l.x; r8.z <- l.y

#line 162
    min r9.xyz, r7.xyzx, r8.xyzx  // r9.x <- i1.x; r9.y <- i1.y; r9.z <- i1.z

#line 163
    max r7.xyz, r7.yzxy, r8.yzxy  // r7.x <- i2.y; r7.y <- i2.z; r7.z <- i2.x

#line 169
    mov r8.xyz, -r9.xyzx
    add r8.xyz, r4.xyzx, r8.xyzx
    add r8.xyz, r0.zzzz, r8.xyzx  // r8.x <- x1.x; r8.y <- x1.y; r8.z <- x1.z

#line 170
    mov r10.xyz, -r7.zxyz
    add r10.xyz, r4.xyzx, r10.xyzx
    add r10.xyz, r0.wwww, r10.xyzx  // r10.x <- x2.x; r10.y <- x2.y; r10.z <- x2.z

#line 171
    mov r11.xyz, -r5.yyyy
    add r11.xyz, r4.xyzx, r11.xyzx  // r11.x <- x3.x; r11.y <- x3.y; r11.z <- x3.z

#line 174
    nop 
    mov r6.xyz, r6.xyzx

#line 35
    mul r12.xyz, r6.xyzx, l(0.003460, 0.003460, 0.003460, 0.000000)
    round_ni r12.xyz, r12.xyzx
    mul r12.xyz, r12.xyzx, l(289.000000, 289.000000, 289.000000, 0.000000)
    mov r12.xyz, -r12.xyzx
    add r6.xyz, r6.xyzx, r12.xyzx  // r6.x <- <mod289 return value>.x; r6.y <- <mod289 return value>.y; r6.z <- <mod289 return value>.z

#line 174
    mov r6.xyz, r6.xyzx  // r6.x <- i.x; r6.y <- i.y; r6.z <- i.z

#line 175
    nop 
    nop 
    nop 
    mov r12.xw, l(0,0,0,1.000000)
    mov r12.y, r9.z
    mov r12.z, r7.y
    add r12.xyzw, r6.zzzz, r12.xyzw

#line 71
    mul r13.xyzw, r12.xyzw, l(34.000000, 34.000000, 34.000000, 34.000000)
    add r13.xyzw, r13.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
    mul r12.xyzw, r12.xyzw, r13.xyzw
    div r12.xyzw, r12.xyzw, l(289.000000, 289.000000, 289.000000, 289.000000)
    mov r13.xyzw, -r12.xyzw
    max r14.xyzw, r12.xyzw, r13.xyzw
    ge r12.xyzw, r12.xyzw, r13.xyzw
    frc r13.xyzw, r14.xyzw
    mov r14.xyzw, -r13.xyzw
    movc r12.xyzw, r12.xyzw, r13.xyzw, r14.xyzw
    mul r12.xyzw, r12.xyzw, l(289.000000, 289.000000, 289.000000, 289.000000)  // r12.x <- <permute return value>.x; r12.y <- <permute return value>.y; r12.z <- <permute return value>.z; r12.w <- <permute return value>.w

#line 175
    add r12.xyzw, r6.yyyy, r12.xyzw
    mov r13.xw, l(0,0,0,1.000000)
    mov r13.y, r9.y
    mov r13.z, r7.x
    add r12.xyzw, r12.xyzw, r13.xyzw

#line 71
    mul r13.xyzw, r12.xyzw, l(34.000000, 34.000000, 34.000000, 34.000000)
    add r13.xyzw, r13.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
    mul r12.xyzw, r12.xyzw, r13.xyzw
    div r12.xyzw, r12.xyzw, l(289.000000, 289.000000, 289.000000, 289.000000)
    mov r13.xyzw, -r12.xyzw
    max r14.xyzw, r12.xyzw, r13.xyzw
    ge r12.xyzw, r12.xyzw, r13.xyzw
    frc r13.xyzw, r14.xyzw
    mov r14.xyzw, -r13.xyzw
    movc r12.xyzw, r12.xyzw, r13.xyzw, r14.xyzw
    mul r12.xyzw, r12.xyzw, l(289.000000, 289.000000, 289.000000, 289.000000)  // r12.x <- <permute return value>.x; r12.y <- <permute return value>.y; r12.z <- <permute return value>.z; r12.w <- <permute return value>.w

#line 175
    add r6.xyzw, r6.xxxx, r12.xyzw
    mov r7.xw, l(0,0,0,1.000000)
    mov r7.y, r9.x
    add r6.xyzw, r6.xyzw, r7.xyzw

#line 71
    mul r7.xyzw, r6.xyzw, l(34.000000, 34.000000, 34.000000, 34.000000)
    add r7.xyzw, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
    mul r6.xyzw, r6.xyzw, r7.xyzw
    div r6.xyzw, r6.xyzw, l(289.000000, 289.000000, 289.000000, 289.000000)
    mov r7.xyzw, -r6.xyzw
    max r9.xyzw, r6.xyzw, r7.xyzw
    ge r6.xyzw, r6.xyzw, r7.xyzw
    frc r7.xyzw, r9.xyzw
    mov r9.xyzw, -r7.xyzw
    movc r6.xyzw, r6.xyzw, r7.xyzw, r9.xyzw
    mul r6.xyzw, r6.xyzw, l(289.000000, 289.000000, 289.000000, 289.000000)  // r6.x <- <permute return value>.x; r6.y <- <permute return value>.y; r6.z <- <permute return value>.z; r6.w <- <permute return value>.w

#line 175
    mov r6.xyzw, r6.xyzw  // r6.x <- p.x; r6.y <- p.y; r6.z <- p.z; r6.w <- p.w

#line 182
    mov r0.z, l(0.142857)  // r0.z <- n_

#line 183
    mul r7.xyz, r5.wyzw, r0.zzzz
    mov r5.xyz, -r5.xzxx
    add r5.xyz, r5.xyzx, r7.xyzx  // r5.x <- ns.x; r5.y <- ns.y; r5.z <- ns.z

#line 185
    mul r7.xyzw, r5.zzzz, r6.xyzw
    mul r7.xyzw, r5.zzzz, r7.xyzw
    round_ni r7.xyzw, r7.xyzw
    mul r7.xyzw, r7.xyzw, l(49.000000, 49.000000, 49.000000, 49.000000)
    mov r7.xyzw, -r7.xyzw
    add r6.xyzw, r6.xyzw, r7.xyzw  // r6.x <- j.x; r6.y <- j.y; r6.z <- j.z; r6.w <- j.w

#line 187
    mul r7.xyzw, r5.zzzz, r6.xyzw
    round_ni r7.xyzw, r7.xyzw  // r7.x <- x_.x; r7.y <- x_.y; r7.z <- x_.z; r7.w <- x_.w

#line 188
    mul r9.xyzw, r7.xyzw, l(7.000000, 7.000000, 7.000000, 7.000000)
    mov r9.xyzw, -r9.xyzw
    add r6.xyzw, r6.xyzw, r9.xyzw
    round_ni r6.xyzw, r6.xyzw  // r6.x <- y_.x; r6.y <- y_.y; r6.z <- y_.z; r6.w <- y_.w

#line 190
    mul r7.xyzw, r5.xxxx, r7.xyzw
    add r7.xyzw, r5.yyyy, r7.xyzw  // r7.x <- x.x; r7.y <- x.y; r7.z <- x.z; r7.w <- x.w

#line 191
    mul r6.xyzw, r5.xxxx, r6.xyzw
    add r5.xyzw, r5.yyyy, r6.xzyw  // r5.x <- y.x; r5.y <- y.z; r5.z <- y.y; r5.w <- y.w

#line 192
    mov r6.xyzw, -r7.xyzw
    max r6.xyzw, r6.xyzw, r7.xyzw
    mov r6.xyzw, -r6.xyzw
    add r6.xyzw, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
    mov r9.xyzw, -r5.xzyw
    max r9.xyzw, r5.xzyw, r9.xyzw
    mov r9.xyzw, -r9.xyzw
    add r6.xyzw, r6.xywz, r9.xywz  // r6.x <- h.x; r6.y <- h.y; r6.z <- h.w; r6.w <- h.z

#line 194
    mov r9.xz, r7.xxyx  // r9.x <- b0.x; r9.z <- b0.y
    mov r9.yw, r5.xxxz  // r9.y <- b0.z; r9.w <- b0.w

#line 195
    mov r5.xz, r7.zzwz  // r5.x <- b1.x; r5.z <- b1.y
    mov r5.yw, r5.yyyw  // r5.y <- b1.z; r5.w <- b1.w

#line 199
    round_ni r7.xyzw, r9.xyzw
    mul r7.xyzw, r7.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000)
    add r7.xyzw, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)  // r7.x <- s0.x; r7.y <- s0.z; r7.z <- s0.y; r7.w <- s0.w

#line 200
    round_ni r12.xyzw, r5.xyzw
    mul r12.xyzw, r12.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000)
    add r12.xyzw, r12.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)  // r12.x <- s1.x; r12.y <- s1.z; r12.z <- s1.y; r12.w <- s1.w

#line 201
    ge r13.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xywz
    movc r13.xyzw, r13.xyzw, l(1.000000,1.000000,1.000000,1.000000), l(0,0,0,0)
    mov r13.xyzw, -r13.xyzw  // r13.x <- sh.x; r13.y <- sh.y; r13.z <- sh.z; r13.w <- sh.w

#line 203
    mul r7.xyzw, r7.xyzw, r13.xxyy
    add r7.xyzw, r7.zwxy, r9.zwxy  // r7.x <- a0.z; r7.y <- a0.w; r7.z <- a0.x; r7.w <- a0.y

#line 204
    mul r9.xyzw, r12.xyzw, r13.zzww
    add r5.xyzw, r5.xyzw, r9.xyzw  // r5.x <- a1.x; r5.y <- a1.y; r5.z <- a1.z; r5.w <- a1.w

#line 206
    mov r9.xy, r7.zwzz  // r9.x <- p0.x; r9.y <- p0.y
    mov r9.z, r6.x  // r9.z <- p0.z

#line 207
    mov r7.xy, r7.xyxx  // r7.x <- p1.x; r7.y <- p1.y
    mov r7.z, r6.y  // r7.z <- p1.z

#line 208
    mov r12.xy, r5.xyxx  // r12.x <- p2.x; r12.y <- p2.y
    mov r12.z, r6.w  // r12.z <- p2.z

#line 209
    mov r6.xy, r5.zwzz  // r6.x <- p3.x; r6.y <- p3.y
    mov r6.z, r6.z  // r6.z <- p3.z

#line 212
    nop 
    dp3 r5.x, r9.xyzx, r9.xyzx
    dp3 r5.y, r7.xyzx, r7.xyzx
    dp3 r5.z, r12.xyzx, r12.xyzx
    dp3 r5.w, r6.xyzx, r6.xyzx

#line 75
    mul r5.xyzw, r5.xyzw, l(0.853735, 0.853735, 0.853735, 0.853735)
    mov r5.xyzw, -r5.xyzw
    add r5.xyzw, r5.xyzw, l(1.792843, 1.792843, 1.792843, 1.792843)  // r5.x <- <taylor_inv_sqrt return value>.x; r5.y <- <taylor_inv_sqrt return value>.y; r5.z <- <taylor_inv_sqrt return value>.z; r5.w <- <taylor_inv_sqrt return value>.w

#line 212
    mov r5.xyzw, r5.xyzw  // r5.x <- norm.x; r5.y <- norm.y; r5.z <- norm.z; r5.w <- norm.w

#line 213
    mul r9.xyz, r5.xxxx, r9.xyzx

#line 214
    mul r7.xyz, r5.yyyy, r7.xyzx

#line 215
    mul r5.xyz, r5.zzzz, r12.xyzx  // r5.x <- p2.x; r5.y <- p2.y; r5.z <- p2.z

#line 216
    mul r6.xyz, r5.wwww, r6.xyzx

#line 219
    dp3 r12.x, r4.xyzx, r4.xyzx
    dp3 r12.y, r8.xyzx, r8.xyzx
    dp3 r12.z, r10.xyzx, r10.xyzx
    dp3 r12.w, r11.xyzx, r11.xyzx
    mov r12.xyzw, -r12.xyzw
    add r12.xyzw, r12.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
    max r12.xyzw, r12.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // r12.x <- m.x; r12.y <- m.y; r12.z <- m.z; r12.w <- m.w

#line 220
    mul r12.xyzw, r12.xyzw, r12.xyzw

#line 221
    mul r12.xyzw, r12.xyzw, r12.xyzw
    dp3 r4.x, r9.xyzx, r4.xyzx
    dp3 r4.y, r7.xyzx, r8.xyzx
    dp3 r4.z, r5.xyzx, r10.xyzx
    dp3 r4.w, r6.xyzx, r11.xyzx
    dp4 r0.z, r12.xyzw, r4.xyzw
    mul r0.z, r0.z, l(105.000000)  // r0.z <- <snoise return value>

#line 53 "C:\Users\2220411\Desktop\課題\自作ライブラリ\描画とゲープロmark2\描画とゲープロ\HLSL\husk_particles_cs.hlsl"
    mul r0.z, r0.z, l(50.000000)  // r0.z <- force

#line 54
    mov r4.xyz, -r2.xyzx
    add r4.xyz, r4.xyzx, cb9[1].xyzx
    dp3 r0.w, r4.xyzx, r4.xyzx
    rsq r0.w, r0.w
    mul r4.xyz, r0.wwww, r4.xyzx
    mul r4.xyz, r0.zzzz, r4.xyzx
    mov r3.w, r2.w
    mul r5.xyz, r3.wyzw, l(0.020000, 0.020000, 0.020000, 0.000000)
    mov r5.xyz, -r5.xyzx
    add r4.xyz, r4.xyzx, r5.xyzx  // r4.x <- acceleration.x; r4.y <- acceleration.y; r4.z <- acceleration.z

#line 55
    mul r4.xyz, r4.xyzx, cb3[29].yyyy
    add r3.yzw, r3.yyzw, r4.yyzx  // r3.w <- p.velocity.x

#line 56
    mul r4.xyz, r3.wyzw, cb3[29].yyyy
    add r2.xyz, r2.xyzx, r4.xyzx

#line 57
    lt r0.z, l(4.000000), r0.y
    if_nz r0.z

#line 59
      ld_structured_indexable(structured_buffer, stride=40)(mixed,mixed,mixed,mixed) r1.x, r0.x, l(0), u0.xxxx
      ld_structured_indexable(structured_buffer, stride=40)(mixed,mixed,mixed,mixed) r1.y, r0.x, l(4), u0.xxxx
      ld_structured_indexable(structured_buffer, stride=40)(mixed,mixed,mixed,mixed) r1.z, r0.x, l(8), u0.xxxx
      ld_structured_indexable(structured_buffer, stride=40)(mixed,mixed,mixed,mixed) r1.w, r0.x, l(12), u0.xxxx

#line 61
      itof r0.y, l(0)

#line 62
      mov r3.x, l(4)

#line 63
      imm_atomic_alloc r4.x, u2

#line 64
    endif 

#line 65
    mov r2.w, r3.w
    mov r2.xyzw, r2.xyzw  // r2.w <- p.velocity.x
    break 

#line 66
    case l(4)

#line 67
    ld_structured_indexable(structured_buffer, stride=40)(mixed,mixed,mixed,mixed) r4.x, r0.x, l(16), u0.xxxx
    ld_structured_indexable(structured_buffer, stride=40)(mixed,mixed,mixed,mixed) r4.y, r0.x, l(20), u0.xxxx
    ld_structured_indexable(structured_buffer, stride=40)(mixed,mixed,mixed,mixed) r4.z, r0.x, l(24), u0.xxxx
    mov r5.xyz, -r2.xyzx
    add r4.xyz, r4.xyzx, r5.xyzx  // r4.x <- d.x; r4.y <- d.y; r4.z <- d.z

#line 68
    dp3 r0.z, r4.xyzx, r4.xyzx
    rsq r0.z, r0.z
    mul r5.xyz, r0.zzzz, r4.xyzx
    dp3 r0.z, r4.xyzx, r4.xyzx
    sqrt r0.z, r0.z
    mov r0.w, l(-1.000000)
    add r0.w, r0.w, l(5.000000)
    mul r0.z, r0.w, r0.z
    add r0.z, r0.z, l(1.000000)
    mul r3.yzw, r0.zzzz, r5.yyzx  // r3.w <- p.velocity.x

#line 69
    mul r4.xyz, r3.wyzw, cb3[29].yyyy
    add r2.xyz, r2.xyzx, r4.xyzx

#line 70
    ld_structured_indexable(structured_buffer, stride=40)(mixed,mixed,mixed,mixed) r4.x, r0.x, l(16), u0.xxxx
    ld_structured_indexable(structured_buffer, stride=40)(mixed,mixed,mixed,mixed) r4.y, r0.x, l(20), u0.xxxx
    ld_structured_indexable(structured_buffer, stride=40)(mixed,mixed,mixed,mixed) r4.z, r0.x, l(24), u0.xxxx
    mov r5.xyz, -r2.xyzx
    add r4.xyz, r4.xyzx, r5.xyzx
    dp3 r0.z, r4.xyzx, r4.xyzx
    sqrt r0.z, r0.z
    lt r0.z, r0.z, l(0.010000)
    if_nz r0.z

#line 72
      ld_structured_indexable(structured_buffer, stride=40)(mixed,mixed,mixed,mixed) r2.x, r0.x, l(16), u0.xxxx
      ld_structured_indexable(structured_buffer, stride=40)(mixed,mixed,mixed,mixed) r2.y, r0.x, l(20), u0.xxxx
      ld_structured_indexable(structured_buffer, stride=40)(mixed,mixed,mixed,mixed) r2.z, r0.x, l(24), u0.xxxx

#line 73
      itof r3.yzw, l(0, 0, 0, 0)

#line 74
      itof r0.y, l(0)

#line 75
      mov r3.x, l(5)

#line 76
      imm_atomic_alloc r4.x, u2

#line 77
      mov r2.w, r3.w
      mov r2.xyzw, r2.xyzw  // r2.w <- p.velocity.x
    else   // Prior locations: r3.w <- p.velocity.x
      mov r2.w, r3.w
      mov r2.xyzw, r2.xyzw  // r2.w <- p.velocity.x
      mov r3.xyz, r3.xyzx
    endif 

#line 78
    break 

#line 79
    case l(5)

#line 81
    break 

#line 82
    default 

#line 83
    break 

#line 84
  endswitch 

#line 86
  add r0.y, r0.y, cb3[29].y

#line 87
  store_structured u1.x, r0.x, l(0), r1.x
  store_structured u1.x, r0.x, l(4), r1.y
  store_structured u1.x, r0.x, l(8), r1.z
  store_structured u1.x, r0.x, l(12), r1.w
  store_structured u1.x, r0.x, l(16), r2.x
  store_structured u1.x, r0.x, l(20), r2.y
  store_structured u1.x, r0.x, l(24), r2.z
  store_structured u1.x, r0.x, l(28), r2.w
  store_structured u1.x, r0.x, l(32), r3.y
  store_structured u1.x, r0.x, l(36), r3.z
  store_structured u1.x, r0.x, l(40), r0.y
  store_structured u1.x, r0.x, l(44), r3.x

#line 88
endif 

#line 89
ret 
// Approximately 357 instruction slots used
