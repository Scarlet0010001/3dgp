//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer POST_EFFECT_CONSTANTS
// {
//
//   float brightness;                  // Offset:    0 Size:     4 [unused]
//   float contrast;                    // Offset:    4 Size:     4 [unused]
//   float hue;                         // Offset:    8 Size:     4 [unused]
//   float saturation;                  // Offset:   12 Size:     4 [unused]
//   float bokeh_aperture;              // Offset:   16 Size:     4 [unused]
//   float bokeh_focus;                 // Offset:   20 Size:     4 [unused]
//   float exposure;                    // Offset:   24 Size:     4
//   float post_effect_options;         // Offset:   28 Size:     4 [unused]
//   float4 projection_texture_intensity;// Offset:   32 Size:    16 [unused]
//   row_major float4x4 projection_texture_transforms;// Offset:   48 Size:    64 [unused]
//   float3 colorize;                   // Offset:  112 Size:    12 [unused]
//
// }
//
// cbuffer BLUR_CONSTANTS
// {
//
//   float smoothstep_minEdge;          // Offset:    0 Size:     4 [unused]
//   float smoothstep_maxEdge;          // Offset:    4 Size:     4 [unused]
//   float gaussian_sigma;              // Offset:    8 Size:     4
//   float bloom_intensity;             // Offset:   12 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// sampler_states[2]                 sampler      NA          NA             s2      1 
// sampler_states[3]                 sampler      NA          NA             s3      1 
// texture_maps[0]                   texture  float4          2d             t0      1 
// texture_maps[1]                   texture  float4          2d             t1      1 
// POST_EFFECT_CONSTANTS             cbuffer      NA          NA            cb8      1 
// BLUR_CONSTANTS                    cbuffer      NA          NA           cb10      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB8[2], immediateIndexed
dcl_constantbuffer CB10[1], immediateIndexed
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 5
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.texcoord.x; v1.y <- pin.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 17 "C:\Users\2220411\Desktop\課題\自作ライブラリ\描画とゲープロmark2\描画とゲープロ\HLSL\blur_ps.hlsl"
mov r0.x, l(0)  // r0.x <- mip_level

#line 18
resinfo_indexable(texture2d)(float,float,float,float) r0.xy, r0.x, t1.xyzw
ftoi r0.x, r0.x  // r0.x <- width
ftoi r0.y, r0.y  // r0.y <- height

#line 21
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s2  // r1.x <- color.x; r1.y <- color.y; r1.z <- color.z; r1.w <- color.w

#line 22
mov r1.w, r1.w  // r1.w <- alpha

#line 25
itof r2.xyz, l(0, 0, 0, 0)  // r2.x <- blur_color.x; r2.y <- blur_color.y; r2.z <- blur_color.z

#line 26
itof r0.z, l(0)  // r0.z <- gaussian_kernel_total

#line 33
mov r0.w, l(-3)  // r0.w <- x

#line 36
mov r2.w, l(-3)  // r2.w <- y

#line 39
imul null, r3.x, r0.w, r0.w
imul null, r3.y, r2.w, r2.w
iadd r3.x, r3.y, r3.x
ineg r3.x, r3.x
itof r3.x, r3.x
mul r3.y, cb10[0].z, l(2.000000)
mul r3.y, r3.y, cb10[0].z
div r3.x, r3.x, r3.y
mul r3.x, r3.x, l(1.442695)
exp r3.x, r3.x
mul r3.y, cb10[0].z, l(6.283185)
mul r3.y, r3.y, cb10[0].z
div r3.x, r3.x, r3.y  // r3.x <- gaussian_kernel

#line 42
itof r3.y, r0.w
mul r3.y, r3.y, l(1.000000)
itof r3.z, r0.x
div r4.x, r3.y, r3.z
itof r2.w, r2.w
mul r2.w, r2.w, l(1.000000)
itof r3.y, r0.y
div r4.y, r2.w, r3.y
add r3.yz, r4.xxyx, v1.xxyx
sample_indexable(texture2d)(float,float,float,float) r3.yzw, r3.yzyy, t1.wxyz, s3
mul r3.yzw, r3.xxxx, r3.yyzw
add r2.xyz, r2.xyzx, r3.yzwy

#line 45
add r0.z, r0.z, r3.x

#line 39
imul null, r2.w, r0.w, r0.w
imul null, r3.x, l(-2), l(-2)
iadd r2.w, r2.w, r3.x
ineg r2.w, r2.w
itof r2.w, r2.w
mul r3.x, cb10[0].z, l(2.000000)
mul r3.x, r3.x, cb10[0].z
div r2.w, r2.w, r3.x
mul r2.w, r2.w, l(1.442695)
exp r2.w, r2.w
mul r3.x, cb10[0].z, l(6.283185)
mul r3.x, r3.x, cb10[0].z
div r2.w, r2.w, r3.x  // r2.w <- gaussian_kernel

#line 42
itof r3.x, r0.w
mul r3.x, r3.x, l(1.000000)
itof r3.y, r0.x
div r3.x, r3.x, r3.y
itof r3.z, l(-2)
mul r3.z, r3.z, l(1.000000)
itof r3.w, r0.y
div r3.y, r3.z, r3.w
add r3.xy, r3.xyxx, v1.xyxx
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xyxx, t1.xyzw, s3
mul r3.xyz, r2.wwww, r3.xyzx
add r2.xyz, r2.xyzx, r3.xyzx

#line 45
add r0.z, r0.z, r2.w

#line 39
imul null, r2.w, r0.w, r0.w
imul null, r3.x, l(-1), l(-1)
iadd r2.w, r2.w, r3.x
ineg r2.w, r2.w
itof r2.w, r2.w
mul r3.x, cb10[0].z, l(2.000000)
mul r3.x, r3.x, cb10[0].z
div r2.w, r2.w, r3.x
mul r2.w, r2.w, l(1.442695)
exp r2.w, r2.w
mul r3.x, cb10[0].z, l(6.283185)
mul r3.x, r3.x, cb10[0].z
div r2.w, r2.w, r3.x  // r2.w <- gaussian_kernel

#line 42
itof r3.x, r0.w
mul r3.x, r3.x, l(1.000000)
itof r3.y, r0.x
div r3.x, r3.x, r3.y
itof r3.z, l(-1)
mul r3.z, r3.z, l(1.000000)
itof r3.w, r0.y
div r3.y, r3.z, r3.w
add r3.xy, r3.xyxx, v1.xyxx
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xyxx, t1.xyzw, s3
mul r3.xyz, r2.wwww, r3.xyzx
add r2.xyz, r2.xyzx, r3.xyzx

#line 45
add r0.z, r0.z, r2.w

#line 46
iadd r2.w, l(1), l(-1)  // r2.w <- y

#line 39
imul null, r3.x, r0.w, r0.w
imul null, r3.y, r2.w, r2.w
iadd r3.x, r3.y, r3.x
ineg r3.x, r3.x
itof r3.x, r3.x
mul r3.y, cb10[0].z, l(2.000000)
mul r3.y, r3.y, cb10[0].z
div r3.x, r3.x, r3.y
mul r3.x, r3.x, l(1.442695)
exp r3.x, r3.x
mul r3.y, cb10[0].z, l(6.283185)
mul r3.y, r3.y, cb10[0].z
div r3.x, r3.x, r3.y  // r3.x <- gaussian_kernel

#line 42
itof r3.y, r0.w
mul r3.y, r3.y, l(1.000000)
itof r3.z, r0.x
div r4.x, r3.y, r3.z
itof r3.y, r2.w
mul r3.y, r3.y, l(1.000000)
itof r3.z, r0.y
div r4.y, r3.y, r3.z
add r3.yz, r4.xxyx, v1.xxyx
sample_indexable(texture2d)(float,float,float,float) r3.yzw, r3.yzyy, t1.wxyz, s3
mul r3.yzw, r3.xxxx, r3.yyzw
add r2.xyz, r2.xyzx, r3.yzwy

#line 45
add r0.z, r0.z, r3.x

#line 46
iadd r2.w, r2.w, l(1)

#line 39
imul null, r3.x, r0.w, r0.w
imul null, r3.y, r2.w, r2.w
iadd r3.x, r3.y, r3.x
ineg r3.x, r3.x
itof r3.x, r3.x
mul r3.y, cb10[0].z, l(2.000000)
mul r3.y, r3.y, cb10[0].z
div r3.x, r3.x, r3.y
mul r3.x, r3.x, l(1.442695)
exp r3.x, r3.x
mul r3.y, cb10[0].z, l(6.283185)
mul r3.y, r3.y, cb10[0].z
div r3.x, r3.x, r3.y  // r3.x <- gaussian_kernel

#line 42
itof r3.y, r0.w
mul r3.y, r3.y, l(1.000000)
itof r3.z, r0.x
div r4.x, r3.y, r3.z
itof r3.y, r2.w
mul r3.y, r3.y, l(1.000000)
itof r3.z, r0.y
div r4.y, r3.y, r3.z
add r3.yz, r4.xxyx, v1.xxyx
sample_indexable(texture2d)(float,float,float,float) r3.yzw, r3.yzyy, t1.wxyz, s3
mul r3.yzw, r3.xxxx, r3.yyzw
add r2.xyz, r2.xyzx, r3.yzwy

#line 45
add r0.z, r0.z, r3.x

#line 46
iadd r2.w, r2.w, l(1)

#line 39
imul null, r3.x, r0.w, r0.w
imul null, r3.y, r2.w, r2.w
iadd r3.x, r3.y, r3.x
ineg r3.x, r3.x
itof r3.x, r3.x
mul r3.y, cb10[0].z, l(2.000000)
mul r3.y, r3.y, cb10[0].z
div r3.x, r3.x, r3.y
mul r3.x, r3.x, l(1.442695)
exp r3.x, r3.x
mul r3.y, cb10[0].z, l(6.283185)
mul r3.y, r3.y, cb10[0].z
div r3.x, r3.x, r3.y  // r3.x <- gaussian_kernel

#line 42
itof r3.y, r0.w
mul r3.y, r3.y, l(1.000000)
itof r3.z, r0.x
div r4.x, r3.y, r3.z
itof r3.y, r2.w
mul r3.y, r3.y, l(1.000000)
itof r3.z, r0.y
div r4.y, r3.y, r3.z
add r3.yz, r4.xxyx, v1.xxyx
sample_indexable(texture2d)(float,float,float,float) r3.yzw, r3.yzyy, t1.wxyz, s3
mul r3.yzw, r3.xxxx, r3.yyzw
add r2.xyz, r2.xyzx, r3.yzwy

#line 45
add r0.z, r0.z, r3.x

#line 46
iadd r2.w, r2.w, l(1)

#line 39
imul null, r3.x, r0.w, r0.w
imul null, r3.y, r2.w, r2.w
iadd r3.x, r3.y, r3.x
ineg r3.x, r3.x
itof r3.x, r3.x
mul r3.y, cb10[0].z, l(2.000000)
mul r3.y, r3.y, cb10[0].z
div r3.x, r3.x, r3.y
mul r3.x, r3.x, l(1.442695)
exp r3.x, r3.x
mul r3.y, cb10[0].z, l(6.283185)
mul r3.y, r3.y, cb10[0].z
div r3.x, r3.x, r3.y  // r3.x <- gaussian_kernel

#line 42
itof r0.w, r0.w
mul r0.w, r0.w, l(1.000000)
itof r0.x, r0.x
div r4.x, r0.w, r0.x
itof r0.x, r2.w
mul r0.x, r0.x, l(1.000000)
itof r0.y, r0.y
div r4.y, r0.x, r0.y
add r0.xy, r4.xyxx, v1.xyxx
sample_indexable(texture2d)(float,float,float,float) r0.xyw, r0.xyxx, t1.xywz, s3
mul r0.xyw, r3.xxxx, r0.xyxw
add r0.xyw, r0.xyxw, r2.xyxz  // r0.x <- blur_color.x; r0.y <- blur_color.y; r0.w <- blur_color.z

#line 45
add r0.z, r0.z, r3.x

#line 48
div r0.xyz, r0.xywx, r0.zzzz  // r0.z <- blur_color.z

#line 51
mul r0.xyz, r0.xyzx, cb10[0].wwww
add r0.xyz, r0.xyzx, r1.xyzx  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 58
itof r1.xyz, l(1, 1, 1, 0)
mov r0.xyz, -r0.xyzx
mul r0.xyz, r0.xyzx, cb8[1].zzzz
mul r0.xyz, r0.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
exp r0.xyz, r0.xyzx
mov r0.xyz, -r0.xyzx
add r0.xyz, r0.xyzx, r1.xyzx  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 63
log r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
exp r0.xyz, r0.xyzx  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 66
mov o0.xyz, r0.xyzx
mov o0.w, r1.w

#line 33
ret 
// Approximately 212 instruction slots used
