//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PRIMITIVE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64 [unused]
//   int material;                      // Offset:   64 Size:     4
//   bool has_tangent;                  // Offset:   68 Size:     4 [unused]
//   int skin;                          // Offset:   72 Size:     4 [unused]
//   int pad;                           // Offset:   76 Size:     4 [unused]
//
// }
//
// Resource bind info for materials
// {
//
//   struct material_constants
//   {
//       
//       float3 emissive_factor;        // Offset:    0
//       int alpha_mode;                // Offset:   12
//       float alpha_cutoff;            // Offset:   16
//       bool double_sided;             // Offset:   20
//       
//       struct pbr_metallic_roughness
//       {
//           
//           float4 basecolor_factor;   // Offset:   24
//           
//           struct texture_info
//           {
//               
//               int index;             // Offset:   40
//               int texcoord;          // Offset:   44
//
//           } basecolor_texture;       // Offset:   40
//           float metallic_factor;     // Offset:   48
//           float roughness_factor;    // Offset:   52
//           
//           struct texture_info
//           {
//               
//               int index;             // Offset:   56
//               int texcoord;          // Offset:   60
//
//           } metallic_roughness_texture;// Offset:   56
//
//       } pbr_metallic_roughness;      // Offset:   24
//       
//       struct normal_texture_info
//       {
//           
//           int index;                 // Offset:   64
//           int texcoord;              // Offset:   68
//           float scale;               // Offset:   72
//
//       } normal_texture;              // Offset:   64
//       
//       struct occlusion_texture_info
//       {
//           
//           int index;                 // Offset:   76
//           int texcoord;              // Offset:   80
//           float strength;            // Offset:   84
//
//       } occlusion_texture;           // Offset:   76
//       
//       struct texture_info
//       {
//           
//           int index;                 // Offset:   88
//           int texcoord;              // Offset:   92
//
//       } emissive_texture;            // Offset:   88
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// sampler_states[2]                 sampler      NA          NA             s2      1 
// materials                         texture  struct         r/o             t0      1 
// material_textures[0]              texture  float4          2d             t1      1 
// PRIMITIVE_CONSTANT_BUFFER         cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyzw        1     NONE   float       
// NORMAL                   0   xyzw        2     NONE   float       
// TANGENT                  0   xyzw        3     NONE   float       
// TEXCOORD                 0   xy          4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[5], immediateIndexed
dcl_sampler s2, mode_default
dcl_resource_structured t0, 96
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v4.xy
dcl_output o0.xyzw
dcl_temps 3
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.w_position.x; v1.y <- pin.w_position.y; v1.z <- pin.w_position.z; v1.w <- pin.w_position.w; 
//   v2.x <- pin.w_normal.x; v2.y <- pin.w_normal.y; v2.z <- pin.w_normal.z; v2.w <- pin.w_normal.w; 
//   v3.x <- pin.w_tangent.x; v3.y <- pin.w_tangent.y; v3.z <- pin.w_tangent.z; v3.w <- pin.w_tangent.w; 
//   v4.x <- pin.texcoord.x; v4.y <- pin.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 65 "C:\Users\2220411\Desktop\課題\自作ライブラリ\描画とゲープロmark2\描画とゲープロ\HLSL\gltf_model_ps.hlsl"
mov r0.x, l(2.200000)  // r0.x <- GAMMA

#line 66
mov r0.y, cb0[4].x
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r1.x, r0.y, l(24), t0.xxxx  // r1.x <- m.pbr_metallic_roughness.basecolor_factor.x
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r1.y, r0.y, l(28), t0.xxxx  // r1.y <- m.pbr_metallic_roughness.basecolor_factor.y
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r1.z, r0.y, l(32), t0.xxxx  // r1.z <- m.pbr_metallic_roughness.basecolor_factor.z
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r1.w, r0.y, l(36), t0.xxxx  // r1.w <- m.pbr_metallic_roughness.basecolor_factor.w
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r0.y, r0.y, l(40), t0.xxxx  // r0.y <- m.pbr_metallic_roughness.basecolor_texture.index

#line 68
mov r1.xyzw, r1.xyzw  // r1.x <- basecolor_factor.x; r1.y <- basecolor_factor.y; r1.z <- basecolor_factor.z; r1.w <- basecolor_factor.w

#line 69
mov r0.y, r0.y  // r0.y <- basecolor_texture

#line 70
ilt r0.y, l(-1), r0.y
if_nz r0.y

#line 72
  sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v4.xyxx, t1.xyzw, s2  // r2.x <- sampled.x; r2.y <- sampled.y; r2.z <- sampled.z; r2.w <- sampled.w

#line 74
  log r0.yzw, r2.xxyz
  mul r0.xyz, r0.yzwy, r0.xxxx
  exp r2.xyz, r0.xyzx

#line 75
  mul r1.xyzw, r1.xyzw, r2.xyzw

#line 76
endif 

#line 78
mov o0.xyzw, r1.xyzw
ret 
// Approximately 19 instruction slots used
