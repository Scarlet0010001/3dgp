//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SCENE_CONSTANTS
// {
//
//   row_major float4x4 view;           // Offset:    0 Size:    64 [unused]
//   row_major float4x4 projection;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 view_projection;// Offset:  128 Size:    64
//   row_major float4x4 inverse_projection;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverse_view_projection;// Offset:  256 Size:    64 [unused]
//   float4 directional_light_direction;// Offset:  320 Size:    16 [unused]
//   float4 directional_light_color;    // Offset:  336 Size:    16 [unused]
//   float4 omni_light_position;        // Offset:  352 Size:    16 [unused]
//   float4 omni_light_color;           // Offset:  368 Size:    16 [unused]
//   float4 rimlight_color;             // Offset:  384 Size:    16 [unused]
//   float4 camera_position;            // Offset:  400 Size:    16 [unused]
//   float4 camera_focus;               // Offset:  416 Size:    16 [unused]
//   float4 avatar_position;            // Offset:  432 Size:    16
//   float4 avatar_direction;           // Offset:  448 Size:    16 [unused]
//   float time;                        // Offset:  464 Size:     4
//   float delta_time;                  // Offset:  468 Size:     4 [unused]
//   float wind_frequency;              // Offset:  472 Size:     4
//   float wind_strength;               // Offset:  476 Size:     4
//   float rimlight_factor;             // Offset:  480 Size:     4 [unused]
//   float snow_factor;                 // Offset:  484 Size:     4 [unused]
//
// }
//
// cbuffer GRASS_CONSTANTS
// {
//
//   float grass_height_factor;         // Offset:    0 Size:     4
//   float grass_width_factor;          // Offset:    4 Size:     4
//   float grass_curvature;             // Offset:    8 Size:     4
//   float grass_withered_factor;       // Offset:   12 Size:     4
//   float grass_height_variance;       // Offset:   16 Size:     4
//   float perlin_noise_distribution_factor;// Offset:   20 Size:     4
//   float tesselation_max_subdivision; // Offset:   24 Size:     4 [unused]
//   float tesselation_max_distance;    // Offset:   28 Size:     4 [unused]
//   float4 grass_specular_color;       // Offset:   32 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// sampler_states[2]                 sampler      NA          NA             s2      1 
// distortion_texture                texture  float4          2d             t5      1 
// SCENE_CONSTANTS                   cbuffer      NA          NA            cb3      1 
// GRASS_CONSTANTS                   cbuffer      NA          NA            cb4      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// NORMAL                   0   xyzw        1     NONE   float   xyzw
// TANGENT                  0   xyzw        2     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xy          3     NONE   float   xy  
// COLOR                    0   xyzw        4     NONE   float   xyzw
//
gs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB3[30], immediateIndexed
dcl_constantbuffer CB4[2], immediateIndexed
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t5
dcl_input v[3][0].xyzw
dcl_input v[3][1].xyzw
dcl_input v[3][2].xyzw
dcl_temps 19
dcl_inputprimitive triangle 
dcl_stream m0
dcl_outputtopology trianglestrip 
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xy
dcl_output o4.xyzw
dcl_maxout 11
//
// Initial variable locations:
//   m0 <- output; 
//   v[0][0].x <- input[0].world_position.x; v[0][0].y <- input[0].world_position.y; v[0][0].z <- input[0].world_position.z; v[0][0].w <- input[0].world_position.w; 
//   v[0][1].x <- input[0].world_normal.x; v[0][1].y <- input[0].world_normal.y; v[0][1].z <- input[0].world_normal.z; v[0][1].w <- input[0].world_normal.w; 
//   v[0][2].x <- input[0].world_tangent.x; v[0][2].y <- input[0].world_tangent.y; v[0][2].z <- input[0].world_tangent.z; v[0][2].w <- input[0].world_tangent.w; 
//   v[1][0].x <- input[1].world_position.x; v[1][0].y <- input[1].world_position.y; v[1][0].z <- input[1].world_position.z; v[1][0].w <- input[1].world_position.w; 
//   v[1][1].x <- input[1].world_normal.x; v[1][1].y <- input[1].world_normal.y; v[1][1].z <- input[1].world_normal.z; v[1][1].w <- input[1].world_normal.w; 
//   v[1][2].x <- input[1].world_tangent.x; v[1][2].y <- input[1].world_tangent.y; v[1][2].z <- input[1].world_tangent.z; v[1][2].w <- input[1].world_tangent.w; 
//   v[2][0].x <- input[2].world_position.x; v[2][0].y <- input[2].world_position.y; v[2][0].z <- input[2].world_position.z; v[2][0].w <- input[2].world_position.w; 
//   v[2][1].x <- input[2].world_normal.x; v[2][1].y <- input[2].world_normal.y; v[2][1].z <- input[2].world_normal.z; v[2][1].w <- input[2].world_normal.w; 
//   v[2][2].x <- input[2].world_tangent.x; v[2][2].y <- input[2].world_tangent.y; v[2][2].z <- input[2].world_tangent.z; v[2][2].w <- input[2].world_tangent.w
//
#line 32 "C:\Users\2220411\Desktop\課題\自作ライブラリ\描画とゲープロmark2\描画とゲープロ\HLSL\grass_gs.hlsl"
nop 
mul r0.xyz, cb4[1].yyyy, v[0][0].xyzx

#line 47 "C:\Users\2220411\Desktop\課題\自作ライブラリ\描画とゲープロmark2\描画とゲープロ\HLSL\noise.hlsli"
round_ni r1.xyz, r0.xyzx  // r1.x <- a.x; r1.y <- a.y; r1.z <- a.z

#line 48
mov r2.xyz, -r1.xyzx
add r0.xyz, r0.xyzx, r2.xyzx  // r0.x <- d.x; r0.y <- d.y; r0.z <- d.z

#line 49
mul r2.xyz, r0.xyzx, r0.xyzx
mul r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
mov r0.xyz, -r0.xyzx
add r0.xyz, r0.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000)
mul r0.xyz, r0.xyzx, r2.xyzx  // r0.x <- d.x; r0.y <- d.y; r0.z <- d.z

#line 51
add r2.xyzw, r1.xxyy, l(0.000000, 1.000000, 0.000000, 1.000000)  // r2.x <- b.x; r2.y <- b.y; r2.z <- b.z; r2.w <- b.w

#line 52
nop 
mov r3.xyzw, r2.xyxy

#line 43
nop 
mul r4.xyzw, r3.zwzw, l(34.000000, 34.000000, 34.000000, 34.000000)
add r4.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
mul r3.xyzw, r3.xyzw, r4.xyzw

#line 39
mul r4.xyzw, r3.zwzw, l(0.003460, 0.003460, 0.003460, 0.003460)
round_ni r4.xyzw, r4.xyzw
mul r4.xyzw, r4.xyzw, l(289.000000, 289.000000, 289.000000, 289.000000)
mov r4.xyzw, -r4.xyzw
add r3.xyzw, r3.xyzw, r4.xyzw  // r3.z <- <mod289 return value>.x; r3.w <- <mod289 return value>.y

#line 43
mov r3.xyzw, r3.xyzw  // r3.z <- <perm return value>.x; r3.w <- <perm return value>.y

#line 52
mov r3.xyzw, r3.xyzw  // r3.z <- k1.x; r3.w <- k1.y

#line 53
nop 
add r2.xyzw, r2.zzww, r3.xyzw

#line 43
nop 
mul r3.xyzw, r2.xyzw, l(34.000000, 34.000000, 34.000000, 34.000000)
add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
mul r2.xyzw, r2.xyzw, r3.xyzw

#line 39
mul r3.xyzw, r2.xyzw, l(0.003460, 0.003460, 0.003460, 0.003460)
round_ni r3.xyzw, r3.xyzw
mul r3.xyzw, r3.xyzw, l(289.000000, 289.000000, 289.000000, 289.000000)
mov r3.xyzw, -r3.xyzw
add r2.xyzw, r2.xyzw, r3.xyzw  // r2.x <- <mod289 return value>.x; r2.y <- <mod289 return value>.y; r2.z <- <mod289 return value>.z; r2.w <- <mod289 return value>.w

#line 43
mov r2.xyzw, r2.xyzw  // r2.x <- <perm return value>.x; r2.y <- <perm return value>.y; r2.z <- <perm return value>.z; r2.w <- <perm return value>.w

#line 53
mov r2.xyzw, r2.xyzw  // r2.x <- k2.x; r2.y <- k2.y; r2.z <- k2.z; r2.w <- k2.w

#line 55
add r1.xyzw, r1.zzzz, r2.xyzw  // r1.x <- c.x; r1.y <- c.y; r1.z <- c.z; r1.w <- c.w

#line 56
nop 
mov r1.xyzw, r1.xyzw

#line 43
nop 
mul r2.xyzw, r1.xyzw, l(34.000000, 34.000000, 34.000000, 34.000000)
add r2.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
mul r2.xyzw, r1.xyzw, r2.xyzw

#line 39
mul r3.xyzw, r2.xyzw, l(0.003460, 0.003460, 0.003460, 0.003460)
round_ni r3.xyzw, r3.xyzw
mul r3.xyzw, r3.xyzw, l(289.000000, 289.000000, 289.000000, 289.000000)
mov r3.xyzw, -r3.xyzw
add r2.xyzw, r2.xyzw, r3.xyzw  // r2.x <- <mod289 return value>.x; r2.y <- <mod289 return value>.y; r2.z <- <mod289 return value>.z; r2.w <- <mod289 return value>.w

#line 43
mov r2.xyzw, r2.xyzw  // r2.x <- <perm return value>.x; r2.y <- <perm return value>.y; r2.z <- <perm return value>.z; r2.w <- <perm return value>.w

#line 56
mov r2.xyzw, r2.xyzw  // r2.x <- k3.x; r2.y <- k3.y; r2.z <- k3.z; r2.w <- k3.w

#line 57
nop 
add r1.xyzw, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)

#line 43
nop 
mul r3.xyzw, r1.xyzw, l(34.000000, 34.000000, 34.000000, 34.000000)
add r3.xyzw, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
mul r1.xyzw, r1.xyzw, r3.xyzw

#line 39
mul r3.xyzw, r1.xyzw, l(0.003460, 0.003460, 0.003460, 0.003460)
round_ni r3.xyzw, r3.xyzw
mul r3.xyzw, r3.xyzw, l(289.000000, 289.000000, 289.000000, 289.000000)
mov r3.xyzw, -r3.xyzw
add r1.xyzw, r1.xyzw, r3.xyzw  // r1.x <- <mod289 return value>.x; r1.y <- <mod289 return value>.y; r1.z <- <mod289 return value>.z; r1.w <- <mod289 return value>.w

#line 43
mov r1.xyzw, r1.xyzw  // r1.x <- <perm return value>.x; r1.y <- <perm return value>.y; r1.z <- <perm return value>.z; r1.w <- <perm return value>.w

#line 57
mov r1.xyzw, r1.xyzw  // r1.x <- k4.x; r1.y <- k4.y; r1.z <- k4.z; r1.w <- k4.w

#line 59
mul r2.xyzw, r2.xyzw, l(0.024390, 0.024390, 0.024390, 0.024390)
frc r2.xyzw, r2.xyzw  // r2.x <- o1.x; r2.y <- o1.y; r2.z <- o1.z; r2.w <- o1.w

#line 60
mul r1.xyzw, r1.xyzw, l(0.024390, 0.024390, 0.024390, 0.024390)
frc r1.xyzw, r1.xyzw  // r1.x <- o2.x; r1.y <- o2.y; r1.z <- o2.z; r1.w <- o2.w

#line 62
mul r1.xyzw, r0.zzzz, r1.xyzw
mov r0.z, -r0.z
add r0.z, r0.z, l(1.000000)
mul r2.xyzw, r0.zzzz, r2.xyzw
add r1.xyzw, r1.xyzw, r2.xyzw  // r1.x <- o3.x; r1.y <- o3.y; r1.z <- o3.z; r1.w <- o3.w

#line 63
mul r0.zw, r0.xxxx, r1.yyyw
mov r0.x, -r0.x
add r0.x, r0.x, l(1.000000)
mul r1.xy, r0.xxxx, r1.xzxx
add r0.xz, r0.zzwz, r1.xxyx  // r0.x <- o4.x; r0.z <- o4.y

#line 65
mul r0.z, r0.y, r0.z
mov r0.y, -r0.y
add r0.y, r0.y, l(1.000000)
mul r0.x, r0.y, r0.x
add r0.x, r0.x, r0.z  // r0.x <- <noise return value>

#line 32 "C:\Users\2220411\Desktop\課題\自作ライブラリ\描画とゲープロmark2\描画とゲープロ\HLSL\grass_gs.hlsl"
mov r0.x, r0.x  // r0.x <- perlin_noise

#line 33
mul r0.y, r0.x, l(2.000000)
mov r0.z, l(-1.000000)
add r0.y, r0.z, r0.y
mul r0.y, r0.y, cb4[1].x
add r0.y, r0.y, cb4[0].x  // r0.y <- grass_blade_height

#line 34
mov r0.z, cb4[0].y  // r0.z <- grass_blade_width

#line 35
mul r1.x, r0.x, cb4[0].w  // r1.x <- withered_color.x
mov r1.yzw, l(0,0,0,1.000000)  // r1.y <- withered_color.y; r1.z <- withered_color.z; r1.w <- withered_color.w

#line 40
nop 
mov r0.xw, v[1][0].xxxy

#line 15 "C:\Users\2220411\Desktop\課題\自作ライブラリ\描画とゲープロmark2\描画とゲープロ\HLSL\noise.hlsli"
dp2 r0.x, r0.xwxx, l(12.989800, 4.141400, 0.000000, 0.000000)
sincos r0.x, null, r0.x
mul r0.x, r0.x, l(43758.546875)
frc r0.x, r0.x  // r0.x <- <random return value>

#line 40 "C:\Users\2220411\Desktop\課題\自作ライブラリ\描画とゲープロmark2\描画とゲープロ\HLSL\grass_gs.hlsl"
mov r0.x, r0.x  // r0.x <- s

#line 41
nop 
mov r2.xy, v[2][0].yzyy

#line 15 "C:\Users\2220411\Desktop\課題\自作ライブラリ\描画とゲープロmark2\描画とゲープロ\HLSL\noise.hlsli"
dp2 r0.w, r2.xyxx, l(12.989800, 4.141400, 0.000000, 0.000000)
sincos r0.w, null, r0.w
mul r0.w, r0.w, l(43758.546875)
frc r0.w, r0.w  // r0.w <- <random return value>

#line 41 "C:\Users\2220411\Desktop\課題\自作ライブラリ\描画とゲープロmark2\描画とゲープロ\HLSL\grass_gs.hlsl"
mov r0.w, r0.w  // r0.w <- t

#line 42
mov r2.xyz, -v[1][0].xyzx
add r2.xyz, r2.xyzx, v[2][0].xyzx
mul r2.xyz, r0.xxxx, r2.xyzx
add r2.xyz, r2.xyzx, v[1][0].xyzx
mov r3.xyz, -v[0][0].xyzx
add r2.xyz, r2.xyzx, r3.xyzx
mul r2.xyz, r0.wwww, r2.xyzx
add r2.xyz, r2.xyzx, v[0][0].xyzx  // r2.x <- midpoint_position.x; r2.y <- midpoint_position.y; r2.z <- midpoint_position.z

#line 43
itof r2.w, l(1)  // r2.w <- midpoint_position.w

#line 46
add r3.xyzw, v[1][1].xyzw, v[0][1].xyzw
add r3.xyzw, r3.xyzw, v[2][1].xyzw
itof r4.xyzw, l(3, 3, 3, 3)
div r3.xyzw, r3.xyzw, r4.xyzw
dp4 r0.x, r3.xyzw, r3.xyzw
rsq r0.x, r0.x
mul r3.xyzw, r0.xxxx, r3.xyzw  // r3.x <- midpoint_normal.x; r3.y <- midpoint_normal.y; r3.z <- midpoint_normal.z; r3.w <- midpoint_normal.w

#line 47
add r4.xyzw, v[1][2].xyzw, v[0][2].xyzw
add r4.xyzw, r4.xyzw, v[2][2].xyzw
itof r5.xyzw, l(3, 3, 3, 3)
div r4.xyzw, r4.xyzw, r5.xyzw
dp4 r0.x, r4.xyzw, r4.xyzw
rsq r0.x, r0.x
mul r4.xyzw, r0.xxxx, r4.xyzw  // r4.x <- midpoint_tangent.x; r4.y <- midpoint_tangent.y; r4.z <- midpoint_tangent.z; r4.w <- midpoint_tangent.w

#line 49
nop 
mov r0.xw, v[0][0].zzzx

#line 15 "C:\Users\2220411\Desktop\課題\自作ライブラリ\描画とゲープロmark2\描画とゲープロ\HLSL\noise.hlsli"
dp2 r0.x, r0.xwxx, l(12.989800, 4.141400, 0.000000, 0.000000)
sincos r0.x, null, r0.x
mul r0.x, r0.x, l(43758.546875)
frc r0.x, r0.x  // r0.x <- <random return value>

#line 49 "C:\Users\2220411\Desktop\課題\自作ライブラリ\描画とゲープロmark2\描画とゲープロ\HLSL\grass_gs.hlsl"
mov r0.x, r0.x  // r0.x <- random_facing

#line 50
nop 
mul r0.x, r0.x, l(3.141593)
mov r5.xyz, r3.xyzx

#line 13
sincos r0.w, null, r0.x  // r0.w <- s
sincos null, r0.x, r0.x  // r0.x <- c

#line 15
itof r5.w, l(1)
mov r6.x, -r0.x
add r5.w, r5.w, r6.x  // r5.w <- t

#line 16
mov r5.x, r5.x  // r5.x <- x

#line 17
mov r5.y, r5.y  // r5.y <- y

#line 19
mov r5.z, r5.z  // r5.z <- z

#line 20
mul r6.x, r5.x, r5.w
mul r6.x, r5.x, r6.x
add r6.x, r0.x, r6.x  // r6.x <- <angle_axis return value>._m00
mul r7.x, r5.x, r5.w
mul r7.x, r5.y, r7.x
mul r7.y, r0.w, r5.z
mov r7.y, -r7.y
add r7.x, r7.y, r7.x  // r7.x <- <angle_axis return value>._m01
mul r8.x, r5.x, r5.w
mul r8.x, r5.z, r8.x
mul r8.y, r0.w, r5.y
add r8.x, r8.y, r8.x  // r8.x <- <angle_axis return value>._m02
mul r9.x, r5.x, r5.w
mul r9.x, r5.y, r9.x
mul r9.y, r0.w, r5.z
add r6.y, r9.y, r9.x  // r6.y <- <angle_axis return value>._m10
mul r9.x, r5.y, r5.w
mul r9.x, r5.y, r9.x
add r7.y, r0.x, r9.x  // r7.y <- <angle_axis return value>._m11
mul r9.x, r5.y, r5.w
mul r9.x, r5.z, r9.x
mul r9.y, r0.w, r5.x
mov r9.y, -r9.y
add r8.y, r9.y, r9.x  // r8.y <- <angle_axis return value>._m12
mul r9.x, r5.x, r5.w
mul r9.x, r5.z, r9.x
mul r9.y, r0.w, r5.y
mov r9.y, -r9.y
add r6.z, r9.y, r9.x  // r6.z <- <angle_axis return value>._m20
mul r9.x, r5.y, r5.w
mul r9.x, r5.z, r9.x
mul r0.w, r0.w, r5.x
add r7.z, r0.w, r9.x  // r7.z <- <angle_axis return value>._m21
mul r0.w, r5.z, r5.w
mul r0.w, r5.z, r0.w
add r8.z, r0.x, r0.w  // r8.z <- <angle_axis return value>._m22
itof r9.xyzw, l(0, 0, 0, 1)  // r9.x <- <angle_axis return value>._m03; r9.y <- <angle_axis return value>._m13; r9.z <- <angle_axis return value>._m23; r9.w <- <angle_axis return value>._m33
itof r10.xyz, l(0, 0, 0, 0)
mov r6.w, r10.x  // r6.w <- <angle_axis return value>._m30
mov r7.w, r10.y  // r7.w <- <angle_axis return value>._m31
mov r8.w, r10.z  // r8.w <- <angle_axis return value>._m32

#line 50
mov r6.xyzw, r6.xyzw  // r6.x <- R._m00; r6.y <- R._m10; r6.z <- R._m20; r6.w <- R._m30
mov r7.xyzw, r7.xyzw  // r7.x <- R._m01; r7.y <- R._m11; r7.z <- R._m21; r7.w <- R._m31
mov r8.xyzw, r8.xyzw  // r8.x <- R._m02; r8.y <- R._m12; r8.z <- R._m22; r8.w <- R._m32
mov r9.xyzw, r9.xyzw  // r9.x <- R._m03; r9.y <- R._m13; r9.z <- R._m23; r9.w <- R._m33

#line 51
dp4 r6.x, r4.xyzw, r6.xyzw  // r6.x <- midpoint_tangent.x
dp4 r6.y, r4.xyzw, r7.xyzw  // r6.y <- midpoint_tangent.y
dp4 r6.z, r4.xyzw, r8.xyzw  // r6.z <- midpoint_tangent.z
dp4 r6.w, r4.xyzw, r9.xyzw  // r6.w <- midpoint_tangent.w

#line 54
mul r0.x, cb3[29].x, cb3[29].z
add r0.xw, r0.xxxx, r2.xxxz  // r0.x <- distortion_texcoord.x; r0.w <- distortion_texcoord.y

#line 55
mul r0.xw, r0.xxxw, l(0.001000, 0.000000, 0.000000, 0.001000)
itof r4.x, l(0)
sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r0.xwxx, t5.xyzw, s2, r4.x
itof r7.xyz, l(2, 2, 2, 0)
mul r4.xyz, r4.xyzx, r7.xyzx
itof r7.xyz, l(1, 1, 1, 0)
mov r7.xyz, -r7.xyzx
add r4.xyz, r4.xyzx, r7.xyzx  // r4.x <- distortion.x; r4.y <- distortion.y; r4.z <- distortion.z

#line 56
mul r0.x, r4.y, l(3.141593)
mul r0.x, r0.x, l(0.500000)
mul r0.x, r0.x, cb3[29].w  // r0.x <- wind_avatar_bending_angle

#line 57
itof r4.w, l(0)
dp3 r0.w, r4.xzwx, r4.xzwx
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, r4.xwzx  // r4.x <- wind_bending_axis.x; r4.y <- wind_bending_axis.y; r4.z <- wind_bending_axis.z

#line 58
nop 
mov r0.x, r0.x
mov r4.xyz, r4.xyzx

#line 13
sincos r0.w, null, r0.x  // r0.w <- s
sincos null, r0.x, r0.x  // r0.x <- c

#line 15
itof r4.w, l(1)
mov r5.w, -r0.x
add r4.w, r4.w, r5.w  // r4.w <- t

#line 16
mov r4.x, r4.x  // r4.x <- x

#line 17
mov r4.y, r4.y  // r4.y <- y

#line 19
mov r4.z, r4.z  // r4.z <- z

#line 20
mul r5.w, r4.x, r4.w
mul r5.w, r4.x, r5.w
add r7.x, r0.x, r5.w  // r7.x <- <angle_axis return value>._m00
mul r5.w, r4.x, r4.w
mul r5.w, r4.y, r5.w
mul r8.x, r0.w, r4.z
mov r8.x, -r8.x
add r7.y, r5.w, r8.x  // r7.y <- <angle_axis return value>._m01
mul r5.w, r4.x, r4.w
mul r5.w, r4.z, r5.w
mul r8.x, r0.w, r4.y
add r7.z, r5.w, r8.x  // r7.z <- <angle_axis return value>._m02
mul r5.w, r4.x, r4.w
mul r5.w, r4.y, r5.w
mul r8.x, r0.w, r4.z
add r8.x, r5.w, r8.x  // r8.x <- <angle_axis return value>._m10
mul r5.w, r4.y, r4.w
mul r5.w, r4.y, r5.w
add r8.y, r0.x, r5.w  // r8.y <- <angle_axis return value>._m11
mul r5.w, r4.y, r4.w
mul r5.w, r4.z, r5.w
mul r9.x, r0.w, r4.x
mov r9.x, -r9.x
add r8.z, r5.w, r9.x  // r8.z <- <angle_axis return value>._m12
mul r5.w, r4.x, r4.w
mul r5.w, r4.z, r5.w
mul r9.x, r0.w, r4.y
mov r9.x, -r9.x
add r9.x, r5.w, r9.x  // r9.x <- <angle_axis return value>._m20
mul r4.y, r4.y, r4.w
mul r4.y, r4.z, r4.y
mul r0.w, r0.w, r4.x
add r9.y, r0.w, r4.y  // r9.y <- <angle_axis return value>._m21
mul r0.w, r4.z, r4.w
mul r0.w, r4.z, r0.w
add r9.z, r0.x, r0.w  // r9.z <- <angle_axis return value>._m22
itof r4.xyzw, l(0, 0, 0, 1)  // r4.x <- <angle_axis return value>._m30; r4.y <- <angle_axis return value>._m31; r4.z <- <angle_axis return value>._m32; r4.w <- <angle_axis return value>._m33
itof r10.xyz, l(0, 0, 0, 0)
mov r7.w, r10.x  // r7.w <- <angle_axis return value>._m03
mov r8.w, r10.y  // r8.w <- <angle_axis return value>._m13
mov r9.w, r10.z  // r9.w <- <angle_axis return value>._m23

#line 58
mov r7.xyzw, r7.xyzw  // r7.x <- W._m00; r7.y <- W._m01; r7.z <- W._m02; r7.w <- W._m03
mov r8.xyzw, r8.xyzw  // r8.x <- W._m10; r8.y <- W._m11; r8.z <- W._m12; r8.w <- W._m13
mov r9.xyzw, r9.xyzw  // r9.x <- W._m20; r9.y <- W._m21; r9.z <- W._m22; r9.w <- W._m23
mov r4.xyzw, r4.xyzw  // r4.x <- W._m30; r4.y <- W._m31; r4.z <- W._m32; r4.w <- W._m33

#line 60
mov r10.xyzw, -r2.xyzw
add r10.xyzw, r10.xyzw, cb3[27].xyzw  // r10.x <- avatar_offset.x; r10.y <- avatar_offset.y; r10.z <- avatar_offset.z; r10.w <- avatar_offset.w

#line 61
dp4 r0.x, r10.xyzw, r10.xyzw
sqrt r0.x, r0.x  // r0.x <- avatar_distance

#line 62
itof r0.w, l(5)  // r0.w <- impact_radius

#line 63
itof r5.w, l(0)
mov r0.w, -r0.w
add r5.w, r0.w, r5.w
add r0.x, r0.w, r0.x
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
mul r0.x, r0.w, r0.x
max r0.x, r0.x, l(0.000000)
min r0.x, r0.x, l(1.000000)
mul r0.w, r0.x, l(-2.000000)
add r0.w, r0.w, l(3.000000)
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, r0.w  // r0.x <- avatar_bending_angle

#line 64
dp4 r0.w, r10.xyzw, r10.xyzw
rsq r0.w, r0.w
mul r10.xyz, r0.wwww, r10.yzxy
mul r11.xyz, r5.yzxy, r10.yzxy
mul r5.xyz, r5.zxyz, r10.xyzx
mov r5.xyz, -r5.xyzx
add r5.xyz, r5.xyzx, r11.xyzx
dp3 r0.w, r5.xyzx, r5.xyzx
rsq r0.w, r0.w
mul r5.xyz, r0.wwww, r5.xyzx  // r5.x <- avatar_bending_axis.x; r5.y <- avatar_bending_axis.y; r5.z <- avatar_bending_axis.z

#line 65
nop 
mul r0.x, r0.x, l(3.141593)
mul r0.x, r0.x, l(0.200000)
mov r5.xyz, r5.xyzx

#line 13
sincos r0.w, null, r0.x  // r0.w <- s
sincos null, r0.x, r0.x  // r0.x <- c

#line 15
itof r5.w, l(1)
mov r10.x, -r0.x
add r5.w, r5.w, r10.x  // r5.w <- t

#line 16
mov r5.x, r5.x  // r5.x <- x

#line 17
mov r5.y, r5.y  // r5.y <- y

#line 19
mov r5.z, r5.z  // r5.z <- z

#line 20
mul r10.x, r5.x, r5.w
mul r10.x, r5.x, r10.x
add r10.x, r0.x, r10.x  // r10.x <- <angle_axis return value>._m00
mul r11.x, r5.x, r5.w
mul r11.x, r5.y, r11.x
mul r11.y, r0.w, r5.z
mov r11.y, -r11.y
add r11.x, r11.y, r11.x  // r11.x <- <angle_axis return value>._m01
mul r12.x, r5.x, r5.w
mul r12.x, r5.z, r12.x
mul r12.y, r0.w, r5.y
add r12.x, r12.y, r12.x  // r12.x <- <angle_axis return value>._m02
mul r13.x, r5.x, r5.w
mul r13.x, r5.y, r13.x
mul r13.y, r0.w, r5.z
add r10.y, r13.y, r13.x  // r10.y <- <angle_axis return value>._m10
mul r13.x, r5.y, r5.w
mul r13.x, r5.y, r13.x
add r11.y, r0.x, r13.x  // r11.y <- <angle_axis return value>._m11
mul r13.x, r5.y, r5.w
mul r13.x, r5.z, r13.x
mul r13.y, r0.w, r5.x
mov r13.y, -r13.y
add r12.y, r13.y, r13.x  // r12.y <- <angle_axis return value>._m12
mul r13.x, r5.x, r5.w
mul r13.x, r5.z, r13.x
mul r13.y, r0.w, r5.y
mov r13.y, -r13.y
add r10.z, r13.y, r13.x  // r10.z <- <angle_axis return value>._m20
mul r5.y, r5.y, r5.w
mul r5.y, r5.z, r5.y
mul r0.w, r0.w, r5.x
add r11.z, r0.w, r5.y  // r11.z <- <angle_axis return value>._m21
mul r0.w, r5.z, r5.w
mul r0.w, r5.z, r0.w
add r12.z, r0.x, r0.w  // r12.z <- <angle_axis return value>._m22
itof r5.xyzw, l(0, 0, 0, 1)  // r5.x <- <angle_axis return value>._m03; r5.y <- <angle_axis return value>._m13; r5.z <- <angle_axis return value>._m23; r5.w <- <angle_axis return value>._m33
itof r13.xyz, l(0, 0, 0, 0)
mov r10.w, r13.x  // r10.w <- <angle_axis return value>._m30
mov r11.w, r13.y  // r11.w <- <angle_axis return value>._m31
mov r12.w, r13.z  // r12.w <- <angle_axis return value>._m32

#line 65
mov r10.xyzw, r10.xyzw  // r10.x <- A._m00; r10.y <- A._m10; r10.z <- A._m20; r10.w <- A._m30
mov r11.xyzw, r11.xyzw  // r11.x <- A._m01; r11.y <- A._m11; r11.z <- A._m21; r11.w <- A._m31
mov r12.xyzw, r12.xyzw  // r12.x <- A._m02; r12.y <- A._m12; r12.z <- A._m22; r12.w <- A._m32
mov r5.xyzw, r5.xyzw  // r5.x <- A._m03; r5.y <- A._m13; r5.z <- A._m23; r5.w <- A._m33

#line 66
dp4 r13.x, r7.xyzw, r10.xyzw  // r13.x <- B._m00
dp4 r14.x, r7.xyzw, r11.xyzw  // r14.x <- B._m01
dp4 r15.x, r7.xyzw, r12.xyzw  // r15.x <- B._m02
dp4 r7.x, r7.xyzw, r5.xyzw  // r7.x <- B._m03
dp4 r13.y, r8.xyzw, r10.xyzw  // r13.y <- B._m10
dp4 r14.y, r8.xyzw, r11.xyzw  // r14.y <- B._m11
dp4 r15.y, r8.xyzw, r12.xyzw  // r15.y <- B._m12
dp4 r7.y, r8.xyzw, r5.xyzw  // r7.y <- B._m13
dp4 r13.z, r9.xyzw, r10.xyzw  // r13.z <- B._m20
dp4 r14.z, r9.xyzw, r11.xyzw  // r14.z <- B._m21
dp4 r15.z, r9.xyzw, r12.xyzw  // r15.z <- B._m22
dp4 r7.z, r9.xyzw, r5.xyzw  // r7.z <- B._m23
dp4 r13.w, r4.xyzw, r10.xyzw  // r13.w <- B._m30
dp4 r14.w, r4.xyzw, r11.xyzw  // r14.w <- B._m31
dp4 r15.w, r4.xyzw, r12.xyzw  // r15.w <- B._m32
dp4 r7.w, r4.xyzw, r5.xyzw  // r7.w <- B._m33

#line 71
nop 
mul r0.xw, l(0.010000, 0.000000, 0.000000, 0.010000), v[0][0].xxxy

#line 15 "C:\Users\2220411\Desktop\課題\自作ライブラリ\描画とゲープロmark2\描画とゲープロ\HLSL\noise.hlsli"
dp2 r0.x, r0.xwxx, l(12.989800, 4.141400, 0.000000, 0.000000)
sincos r0.x, null, r0.x
mul r0.x, r0.x, l(43758.546875)
frc r0.x, r0.x  // r0.x <- <random return value>

#line 71 "C:\Users\2220411\Desktop\課題\自作ライブラリ\描画とゲープロmark2\描画とゲープロ\HLSL\grass_gs.hlsl"
mov r0.x, r0.x  // r0.x <- random_curvature

#line 72
mul r0.x, r0.x, l(2.000000)
mov r0.w, l(-1.000000)
add r0.x, r0.w, r0.x
mul r0.x, r0.x, l(1.570796)
mul r0.x, r0.x, cb4[0].z  // r0.x <- curvature

#line 73
nop 
itof r0.w, l(5)
div r0.x, r0.x, r0.w
mov r4.xyz, r6.xyzx

#line 13
sincos r0.w, null, r0.x  // r0.w <- s
sincos null, r0.x, r0.x  // r0.x <- c

#line 15
itof r4.w, l(1)
mov r5.x, -r0.x
add r4.w, r4.w, r5.x  // r4.w <- t

#line 16
mov r4.x, r4.x  // r4.x <- x

#line 17
mov r4.y, r4.y  // r4.y <- y

#line 19
mov r4.z, r4.z  // r4.z <- z

#line 20
mul r5.x, r4.x, r4.w
mul r5.x, r4.x, r5.x
add r5.x, r0.x, r5.x  // r5.x <- <angle_axis return value>._m00
mul r8.x, r4.x, r4.w
mul r8.x, r4.y, r8.x
mul r8.y, r0.w, r4.z
mov r8.y, -r8.y
add r8.x, r8.y, r8.x  // r8.x <- <angle_axis return value>._m01
mul r9.x, r4.x, r4.w
mul r9.x, r4.z, r9.x
mul r9.y, r0.w, r4.y
add r9.x, r9.y, r9.x  // r9.x <- <angle_axis return value>._m02
mul r10.x, r4.x, r4.w
mul r10.x, r4.y, r10.x
mul r10.y, r0.w, r4.z
add r5.y, r10.y, r10.x  // r5.y <- <angle_axis return value>._m10
mul r10.x, r4.y, r4.w
mul r10.x, r4.y, r10.x
add r8.y, r0.x, r10.x  // r8.y <- <angle_axis return value>._m11
mul r10.x, r4.y, r4.w
mul r10.x, r4.z, r10.x
mul r10.y, r0.w, r4.x
mov r10.y, -r10.y
add r9.y, r10.y, r10.x  // r9.y <- <angle_axis return value>._m12
mul r10.x, r4.x, r4.w
mul r10.x, r4.z, r10.x
mul r10.y, r0.w, r4.y
mov r10.y, -r10.y
add r5.z, r10.y, r10.x  // r5.z <- <angle_axis return value>._m20
mul r4.y, r4.y, r4.w
mul r4.y, r4.z, r4.y
mul r0.w, r0.w, r4.x
add r8.z, r0.w, r4.y  // r8.z <- <angle_axis return value>._m21
mul r0.w, r4.z, r4.w
mul r0.w, r4.z, r0.w
add r9.z, r0.x, r0.w  // r9.z <- <angle_axis return value>._m22
itof r4.xyzw, l(0, 0, 0, 1)  // r4.w <- <angle_axis return value>._m33; r4.x <- <angle_axis return value>._m03; r4.y <- <angle_axis return value>._m13; r4.z <- <angle_axis return value>._m23
itof r10.xyz, l(0, 0, 0, 0)
mov r5.w, r10.x  // r5.w <- <angle_axis return value>._m30
mov r8.w, r10.y  // r8.w <- <angle_axis return value>._m31
mov r9.w, r10.z  // r9.w <- <angle_axis return value>._m32

#line 73
mov r5.xyzw, r5.xyzw  // r5.x <- C._m00; r5.y <- C._m10; r5.z <- C._m20; r5.w <- C._m30
mov r8.xyzw, r8.xyzw  // r8.x <- C._m01; r8.y <- C._m11; r8.z <- C._m21; r8.w <- C._m31
mov r9.xyzw, r9.xyzw  // r9.x <- C._m02; r9.y <- C._m12; r9.z <- C._m22; r9.w <- C._m32
mov r4.xyzw, r4.xyzw  // r4.x <- C._m03; r4.y <- C._m13; r4.z <- C._m23; r4.w <- C._m33

#line 74
mov r3.xyzw, r3.xyzw  // r3.x <- segment_normal.x; r3.y <- segment_normal.y; r3.z <- segment_normal.z; r3.w <- segment_normal.w

#line 77
mov r0.x, l(0)  // r0.x <- i
mov r10.xyzw, r3.xyzw  // r10.x <- segment_normal.x; r10.y <- segment_normal.y; r10.z <- segment_normal.z; r10.w <- segment_normal.w
mov r0.w, r0.x  // r0.w <- i
loop 
  ilt r11.x, r0.w, l(5)
  breakc_z r11.x

#line 79
  itof r11.x, r0.w
  itof r11.y, l(5)
  div r11.x, r11.x, r11.y  // r11.x <- t

#line 80
  mul r11.y, r0.y, r11.x  // r11.y <- segment_height

#line 81
  itof r11.z, l(1)
  mov r11.w, -r11.x
  add r11.z, r11.w, r11.z
  mul r11.z, r0.z, r11.z  // r11.z <- segment_width

#line 83
  mov r10.xyzw, r10.xyzw  // r10.x <- element.world_normal.x; r10.y <- element.world_normal.y; r10.z <- element.world_normal.z; r10.w <- element.world_normal.w

#line 87
  mov r12.xyzw, r1.xyzw  // r12.x <- element.color.x; r12.y <- element.color.y; r12.z <- element.color.z; r12.w <- element.color.w

#line 89
  mul r16.xyzw, r10.xyzw, r11.yyyy
  add r16.xyzw, r2.xyzw, r16.xyzw
  mul r17.xyzw, r6.xyzw, r11.zzzz
  add r16.xyzw, r16.xyzw, r17.xyzw  // r16.x <- element.world_position.x; r16.y <- element.world_position.y; r16.z <- element.world_position.z; r16.w <- element.world_position.w

#line 90
  mov r17.xyzw, -r2.xyzw
  add r16.xyzw, r16.xyzw, r17.xyzw
  dp4 r17.x, r16.xyzw, r13.xyzw
  dp4 r17.y, r16.xyzw, r14.xyzw
  dp4 r17.z, r16.xyzw, r15.xyzw
  dp4 r17.w, r16.xyzw, r7.xyzw
  add r16.xyzw, r2.xyzw, r17.xyzw  // r16.x <- element.world_position.x; r16.y <- element.world_position.y; r16.z <- element.world_position.z; r16.w <- element.world_position.w

#line 91
  mul r17.xyzw, r16.xxxx, cb3[8].xyzw
  mul r18.xyzw, r16.yyyy, cb3[9].xyzw
  add r17.xyzw, r17.xyzw, r18.xyzw
  mul r18.xyzw, r16.zzzz, cb3[10].xyzw
  add r17.xyzw, r17.xyzw, r18.xyzw
  mul r18.xyzw, r16.wwww, cb3[11].xyzw
  add r17.xyzw, r17.xyzw, r18.xyzw  // r17.x <- element.position.x; r17.y <- element.position.y; r17.z <- element.position.z; r17.w <- element.position.w

#line 92
  itof r11.w, l(1)
  mov r18.x, -r11.x
  add r18.y, r11.w, r18.x  // r18.y <- element.texcoord.y
  itof r18.x, l(0)  // r18.x <- element.texcoord.x

#line 93
  mov o0.xyzw, r17.xyzw
  mov o1.xyzw, r16.xyzw
  mov o2.xyzw, r10.xyzw
  mov o3.xy, r18.xyxx
  mov o4.xyzw, r12.xyzw
  emit_stream m0

#line 95
  mul r16.xyzw, r10.xyzw, r11.yyyy
  add r16.xyzw, r2.xyzw, r16.xyzw
  mul r17.xyzw, r6.xyzw, r11.zzzz
  mov r17.xyzw, -r17.xyzw
  add r16.xyzw, r16.xyzw, r17.xyzw  // r16.x <- element.world_position.x; r16.y <- element.world_position.y; r16.z <- element.world_position.z; r16.w <- element.world_position.w

#line 96
  mov r17.xyzw, -r2.xyzw
  add r16.xyzw, r16.xyzw, r17.xyzw
  dp4 r17.x, r16.xyzw, r13.xyzw
  dp4 r17.y, r16.xyzw, r14.xyzw
  dp4 r17.z, r16.xyzw, r15.xyzw
  dp4 r17.w, r16.xyzw, r7.xyzw
  add r16.xyzw, r2.xyzw, r17.xyzw  // r16.x <- element.world_position.x; r16.y <- element.world_position.y; r16.z <- element.world_position.z; r16.w <- element.world_position.w

#line 97
  mul r17.xyzw, r16.xxxx, cb3[8].xyzw
  mul r18.xyzw, r16.yyyy, cb3[9].xyzw
  add r17.xyzw, r17.xyzw, r18.xyzw
  mul r18.xyzw, r16.zzzz, cb3[10].xyzw
  add r17.xyzw, r17.xyzw, r18.xyzw
  mul r18.xyzw, r16.wwww, cb3[11].xyzw
  add r17.xyzw, r17.xyzw, r18.xyzw  // r17.x <- element.position.x; r17.y <- element.position.y; r17.z <- element.position.z; r17.w <- element.position.w

#line 98
  itof r11.y, l(1)
  mov r11.x, -r11.x
  add r11.y, r11.x, r11.y  // r11.y <- element.texcoord.y
  itof r11.x, l(1)  // r11.x <- element.texcoord.x

#line 99
  mov o0.xyzw, r17.xyzw
  mov o1.xyzw, r16.xyzw
  mov o2.xyzw, r10.xyzw
  mov o3.xy, r11.xyxx
  mov o4.xyzw, r12.xyzw
  emit_stream m0

#line 101
  dp4 r11.x, r10.xyzw, r5.xyzw  // r11.x <- segment_normal.x
  dp4 r11.y, r10.xyzw, r8.xyzw  // r11.y <- segment_normal.y
  dp4 r11.z, r10.xyzw, r9.xyzw  // r11.z <- segment_normal.z
  dp4 r11.w, r10.xyzw, r4.xyzw  // r11.w <- segment_normal.w

#line 102
  iadd r0.w, r0.w, l(1)
  mov r10.xyzw, r11.xyzw  // r10.x <- segment_normal.x; r10.y <- segment_normal.y; r10.z <- segment_normal.z; r10.w <- segment_normal.w
endloop 

#line 103
mul r0.xyzw, r0.yyyy, r10.xyzw
add r0.xyzw, r0.xyzw, r2.xyzw  // r0.x <- element.world_position.x; r0.y <- element.world_position.y; r0.z <- element.world_position.z; r0.w <- element.world_position.w

#line 104
mov r3.xyzw, -r2.xyzw
add r0.xyzw, r0.xyzw, r3.xyzw
dp4 r3.x, r0.xyzw, r13.xyzw
dp4 r3.y, r0.xyzw, r14.xyzw
dp4 r3.z, r0.xyzw, r15.xyzw
dp4 r3.w, r0.xyzw, r7.xyzw
add r0.xyzw, r2.xyzw, r3.xyzw  // r0.x <- element.world_position.x; r0.y <- element.world_position.y; r0.z <- element.world_position.z; r0.w <- element.world_position.w

#line 105
mul r2.xyzw, r0.xxxx, cb3[8].xyzw
mul r3.xyzw, r0.yyyy, cb3[9].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, r0.zzzz, cb3[10].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, r0.wwww, cb3[11].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw  // r2.x <- element.position.x; r2.y <- element.position.y; r2.z <- element.position.z; r2.w <- element.position.w

#line 106
mov r10.xyzw, r10.xyzw  // r10.x <- element.world_normal.x; r10.y <- element.world_normal.y; r10.z <- element.world_normal.z; r10.w <- element.world_normal.w

#line 107
mov r1.xyzw, r1.xyzw  // r1.x <- element.color.x; r1.y <- element.color.y; r1.z <- element.color.z; r1.w <- element.color.w

#line 108
itof r3.y, l(0)  // r3.y <- element.texcoord.y
mov r3.x, l(0.500000)  // r3.x <- element.texcoord.x

#line 109
mov o0.xyzw, r2.xyzw
mov o1.xyzw, r0.xyzw
mov o2.xyzw, r10.xyzw
mov o3.xy, r3.xyxx
mov o4.xyzw, r1.xyzw
emit_stream m0

#line 111
cut_stream m0

#line 112
ret 
// Approximately 547 instruction slots used
