//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer OBJECT_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64
//   float4 material_color;             // Offset:   64 Size:    16
//
// }
//
// cbuffer SCENE_CONSTANTS
// {
//
//   row_major float4x4 view;           // Offset:    0 Size:    64 [unused]
//   row_major float4x4 projection;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 view_projection;// Offset:  128 Size:    64
//   row_major float4x4 inverse_projection;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverse_view_projection;// Offset:  256 Size:    64 [unused]
//   float4 directional_light_direction;// Offset:  320 Size:    16 [unused]
//   float4 directional_light_color;    // Offset:  336 Size:    16 [unused]
//   float4 omni_light_position;        // Offset:  352 Size:    16 [unused]
//   float4 omni_light_color;           // Offset:  368 Size:    16 [unused]
//   float4 rimlight_color;             // Offset:  384 Size:    16 [unused]
//   float4 camera_position;            // Offset:  400 Size:    16 [unused]
//   float4 camera_focus;               // Offset:  416 Size:    16 [unused]
//   float4 avatar_position;            // Offset:  432 Size:    16 [unused]
//   float4 avatar_direction;           // Offset:  448 Size:    16 [unused]
//   float time;                        // Offset:  464 Size:     4 [unused]
//   float delta_time;                  // Offset:  468 Size:     4 [unused]
//   float wind_frequency;              // Offset:  472 Size:     4 [unused]
//   float wind_strength;               // Offset:  476 Size:     4 [unused]
//   float rimlight_factor;             // Offset:  480 Size:     4 [unused]
//   float snow_factor;                 // Offset:  484 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// OBJECT_CONSTANT_BUFFER            cbuffer      NA          NA            cb0      1 
// SCENE_CONSTANTS                   cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[5], immediateIndexed
dcl_constantbuffer CB3[12], immediateIndexed
dcl_input v0.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_temps 5
//
// Initial variable locations:
//   v0.x <- position.x; v0.y <- position.y; v0.z <- position.z; v0.w <- position.w; 
//   o1.x <- <main return value>.color.x; o1.y <- <main return value>.color.y; o1.z <- <main return value>.color.z; o1.w <- <main return value>.color.w; 
//   o0.x <- <main return value>.position.x; o0.y <- <main return value>.position.y; o0.z <- <main return value>.position.z; o0.w <- <main return value>.position.w
//
#line 7 "C:\Users\2220411\Desktop\課題\自作ライブラリ\描画とゲープロmark2\描画とゲープロ\HLSL\debug_renderer_vs.hlsl"
mul r0.xyzw, cb0[0].xxxx, cb3[8].xyzw
mul r1.xyzw, cb0[0].yyyy, cb3[9].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, cb0[0].zzzz, cb3[10].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, cb0[0].wwww, cb3[11].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, cb0[1].xxxx, cb3[8].xyzw
mul r2.xyzw, cb0[1].yyyy, cb3[9].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, cb0[1].zzzz, cb3[10].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, cb0[1].wwww, cb3[11].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, cb0[2].xxxx, cb3[8].xyzw
mul r3.xyzw, cb0[2].yyyy, cb3[9].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb0[2].zzzz, cb3[10].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb0[2].wwww, cb3[11].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb0[3].xxxx, cb3[8].xyzw
mul r4.xyzw, cb0[3].yyyy, cb3[9].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, cb0[3].zzzz, cb3[10].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, cb0[3].wwww, cb3[11].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r0.xyzw, r0.xyzw, v0.xxxx
mul r1.xyzw, r1.xyzw, v0.yyyy
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, r2.xyzw, v0.zzzz
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, r3.xyzw, v0.wwww
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- vout.position.x; r0.y <- vout.position.y; r0.z <- vout.position.z; r0.w <- vout.position.w

#line 8
mov r1.xyzw, cb0[4].xyzw  // r1.x <- vout.color.x; r1.y <- vout.color.y; r1.z <- vout.color.z; r1.w <- vout.color.w

#line 10
mov o0.xyzw, r0.xyzw
mov o1.xyzw, r1.xyzw
ret 
// Approximately 39 instruction slots used
