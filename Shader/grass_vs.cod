//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer OBJECT_CONSTANTS
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// OBJECT_CONSTANTS                  cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float   xyzw
// TANGENT                  0   xyzw        2     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 5
//
// Initial variable locations:
//   v0.x <- vin.position.x; v0.y <- vin.position.y; v0.z <- vin.position.z; v0.w <- vin.position.w; 
//   v1.x <- vin.normal.x; v1.y <- vin.normal.y; v1.z <- vin.normal.z; v1.w <- vin.normal.w; 
//   v2.x <- vin.tangent.x; v2.y <- vin.tangent.y; v2.z <- vin.tangent.z; v2.w <- vin.tangent.w; 
//   o2.x <- <main return value>.world_tangent.x; o2.y <- <main return value>.world_tangent.y; o2.z <- <main return value>.world_tangent.z; o2.w <- <main return value>.world_tangent.w; 
//   o1.x <- <main return value>.world_normal.x; o1.y <- <main return value>.world_normal.y; o1.z <- <main return value>.world_normal.z; o1.w <- <main return value>.world_normal.w; 
//   o0.x <- <main return value>.world_position.x; o0.y <- <main return value>.world_position.y; o0.z <- <main return value>.world_position.z; o0.w <- <main return value>.world_position.w
//
#line 8 "C:\Users\2220411\Desktop\課題\自作ライブラリ\描画とゲープロmark2\描画とゲープロ\HLSL\grass_vs.hlsl"
mul r0.xyzw, v0.xxxx, cb0[0].xyzw
mul r1.xyzw, v0.yyyy, cb0[1].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, v0.zzzz, cb0[2].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, v0.wwww, cb0[3].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- vout.world_position.x; r0.y <- vout.world_position.y; r0.z <- vout.world_position.z; r0.w <- vout.world_position.w

#line 9
itof r1.x, l(0)  // r1.x <- vin.normal.w

#line 10
mul r2.xyzw, v1.xxxx, cb0[0].xyzw
mul r3.xyzw, v1.yyyy, cb0[1].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, v1.zzzz, cb0[2].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r1.xyzw, r1.xxxx, cb0[3].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
dp4 r2.x, r1.xyzw, r1.xyzw
rsq r2.x, r2.x
mul r1.xyzw, r1.xyzw, r2.xxxx  // r1.x <- vout.world_normal.x; r1.y <- vout.world_normal.y; r1.z <- vout.world_normal.z; r1.w <- vout.world_normal.w

#line 11
mov r2.x, v2.w  // r2.x <- sigma

#line 12
itof r2.y, l(0)  // r2.y <- vin.tangent.w

#line 13
mul r3.xyzw, v2.xxxx, cb0[0].xyzw
mul r4.xyzw, v2.yyyy, cb0[1].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, v2.zzzz, cb0[2].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, r2.yyyy, cb0[3].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
dp4 r2.y, r3.xyzw, r3.xyzw
rsq r2.y, r2.y
mul r2.yzw, r2.yyyy, r3.xxyz  // r2.y <- vout.world_tangent.x; r2.z <- vout.world_tangent.y; r2.w <- vout.world_tangent.z

#line 14
mov r2.x, r2.x  // r2.x <- vout.world_tangent.w

#line 15
mov o0.xyzw, r0.xyzw
mov o1.xyzw, r1.xyzw
mov o2.xyz, r2.yzwy
mov o2.w, r2.x
ret 
// Approximately 36 instruction slots used
